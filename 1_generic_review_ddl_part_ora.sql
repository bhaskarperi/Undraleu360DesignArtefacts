/********************************************************************************************************
Copyright CoeurData Ltd 2009-2023

*********************************************************************************************************
*************** CHANGE HISTORY **************************************************************************
DATE		WHO			DESCRIPTION
08DEC2021	BP			Merged Schema for IICS and DS into one review schema
						Refactored the 360 Schema for co-existing with Review Schema
17DEC2021	BP			Added cbp_idm_auth Table
29DEC2021	BP			Added cbp_vcs_url and cbp_vcs_url_root to cbp_repository table to support Talend
30DEC2021	BP			Added cbp_rule_xpath_map and cbp_ta_xpath tables for Talend
24JAN2022	BP			Merged with IPC (folder_id_v and selection_id_v)
24JAN2022	BP			Dropped the following tables
							cbp_tkt_dtd_type
							cbp_tkt_control_object_role
							cbp_tkt_control_object_type
						
						Moved the table to review schema
							cbp_user_selection_choice
10FEB2022	BP			Added code_object_id in the table cbp_legacy_code_manual
17MAR2022	BP			ODI Merged
						1. cbp_odi_folder_type added
12JUL2022	BP			Added table for ADF cbp_adf_object_map, cbp_code_object_git and altered cbp_repository 
						table to add more columns
07AUG2022	BP			Added table cbp_exit_entry_crit to support the CI/CD feature primarily for IICS and also 
						to support DZ BANK Requirement
08AUG2022	BP			Added two columns to CBP_REV_HISTORY_SUM (vcs_identifier and vcs_supp_data)
12AUG2022	BP			Added vcs_res_id to CBP_REV_HISTORY_SUM to store the VCS where the code file is submitted
20SEP2022	BP			Modified the vcs_supp_data column to blob in the cbp_rev_history_sum table
						Added new table cbp_user_proj_rel_branch
07OCT2022	BP			Modified the column cbp_code_object_git.cbp_sha_id to NULLABLE
10OCT2022	BP			Added Foreign Key for the CBP table cbp_user_proj_rel_branch to CBP_TKT_RES			
17OCT2022	BP			Removed references to cbp_tkt_rest table for FK for res_id and moved to the tkt scripts
09NOV2022	BP			Added workdirectory to cbp_cmd_config table
20NOV2022	BP			Merged 360 scripts into this script
						Removed table cbp_tkt_env_type and all its references.
						These tables now will reference cbp_env_type_id table:
							cbp_tkt_app_env_promo
							cbp_tkt_app_env
							cbp_tkt_app_env_res
							cbp_tkt_policy_target
							cbp_tkt_node_prop_xform
							cbp_tkt_app_landscape
							cbp_tkt_rel_tag_env
						Any SQL's that reference the above tables and cbp_tkt_env_type table should now use cbp_env_type table instead of cbp_tkt_env_type table
							The join between the above tables and the cbp_env_type table will be something like the below:
								env_type_id = cbp_env_type_id (not the cbp_ prefix will need to be added in each join and the java set methods)
								Previously the joins were like this:
								env_type_id = env_type_id as the columns in both tables were env_type_id
01DEC2022	BP			Added cbp_code_type_display_name to cbp_code_type table
						Added cbp_code_type_id to cbp_repository table
05DEC2022	BP			Added cbp_code_type_id in cbp_tkt_res_type R2200
13DEC2022	BP/MG		Added load_status field to cbp_repository table to store the load status for ADF repositories	
23DEC2022	BP/MG		Added cbp_repository.cbp_vcs_projectname VARCHAR2(200 BYTE)) needed for AzureGit repositories in ADF
30DEC2022	BP/NK		Added cbp_code_review_status.review_stats VARCHAR2(500)		
20JAN2023	BP			Made changes to refactor for nr_db_type_id column removal
							Dropped cbp_nr_db_type;
							Dropped nr_db_type_id from cbp_db_connection table
							Renamed nr_db_type_id TO cbp_db_type_id in cbp_feature_supp_db_type
14FEB2023	MG/BP		Added cbp_repository.az_dtbricks_url cbp_repository.az_dtbricks_token to support Databricks
23FEB2023	BP			Added cbp_repository.cbp_dtbricks_url and cbp_repository.cbp_dtbricks_token which need to be removed once 
						the columns in this table have been reviewed
08MAR2023	BP			Added cbp_cmd_config.private_key_loc for storing the private key generated by Undraleu on Undraleu server
17APR2023	BP			Added cbp_act_tag_trans.automation_test_candidate for supporting automated unit tests
05MAY2023	BP			Added cbp_act_tag_trans.act_tag_trans_port_list_json to support selective port unit testing
********************************************************************************************************/

DROP TABLE cbp_odi_folder_type;
DROP TABLE cbp_act_tag;
DROP TABLE cbp_act_tag_trans;
DROP TABLE cbp_asset_type;
DROP TABLE cbp_batch_group;
DROP TABLE cbp_batch_group_run_detail;
DROP TABLE cbp_bobject_type;
DROP TABLE cbp_category;
DROP TABLE cbp_cmd_config;
DROP TABLE cbp_cmd_type;
DROP TABLE cbp_code_object;
DROP TABLE cbp_code_review_status;
DROP TABLE cbp_code_type;
DROP TABLE cbp_cons_rule_trans_sql_prop;
DROP TABLE cbp_criticality_level;
DROP TABLE cbp_db_connection;
DROP TABLE cbp_db_type;
DROP TABLE cbp_ds_project;
DROP TABLE cbp_email_details;
DROP TABLE cbp_env_type;
DROP TABLE cbp_feature;
DROP TABLE cbp_feature_supp_db_type;
DROP TABLE cbp_folder;
DROP TABLE cbp_idm_auth;
DROP TABLE cbp_ipc_dom;
DROP TABLE cbp_ipc_int_svc;
DROP TABLE cbp_job_parameter;
DROP TABLE cbp_job_type;
DROP TABLE cbp_ldap_connection;
DROP TABLE cbp_legacy_code_manual;
DROP TABLE cbp_license;
DROP TABLE cbp_master_status;
DROP TABLE cbp_master_subject_area;
DROP TABLE cbp_metrics_report;
DROP TABLE cbp_metrics_report_detail;
DROP TABLE cbp_misc_project_property;
DROP TABLE cbp_misc_property;
DROP TABLE cbp_notif_group;
DROP TABLE cbp_notif_group_member;
DROP TABLE cbp_notif_group_signal;
--DROP TABLE cbp_nr_db_type;
DROP TABLE cbp_object_signal_audit;
DROP TABLE cbp_opb_attr;
DROP TABLE cbp_opb_object_type;
DROP TABLE cbp_parameter;
DROP TABLE cbp_pattern;
DROP TABLE cbp_project;
DROP TABLE cbp_project_crit_pre_app;
DROP TABLE cbp_project_folder;
DROP TABLE cbp_project_parameter;
DROP TABLE cbp_project_repository;
DROP TABLE cbp_project_rule_category;
DROP TABLE cbp_project_rule_criticality;
DROP TABLE cbp_project_rule_list;
DROP TABLE cbp_property_group;
DROP TABLE cbp_prx_object_type;
DROP TABLE cbp_repo_pair;
DROP TABLE cbp_repository;
DROP TABLE cbp_repository_type;
DROP TABLE cbp_rev_history_det;
DROP TABLE cbp_rev_history_sum;
DROP TABLE cbp_rule;
DROP TABLE cbp_rule_category;
DROP TABLE cbp_rule_commentary;
DROP TABLE cbp_rule_criticality;
DROP TABLE cbp_rule_imp_type;
DROP TABLE cbp_rule_list;
DROP TABLE cbp_rule_list_group;
DROP TABLE cbp_rule_parameter;
DROP TABLE cbp_rule_property;
DROP TABLE cbp_rule_q_mapper;
DROP TABLE cbp_rule_xpath_map;
DROP TABLE cbp_sched;
DROP TABLE cbp_sched_job_type_param_rel;
DROP TABLE cbp_selection;
DROP TABLE cbp_selection_type;
DROP TABLE cbp_signal;
DROP TABLE cbp_signal_key_type;
DROP TABLE cbp_signal_type;
DROP TABLE cbp_sql_kpi;
DROP TABLE cbp_sso_auth;
DROP TABLE cbp_ta_xpath;
DROP TABLE cbp_table_rule_supp;
DROP TABLE cbp_team;
DROP TABLE cbp_team_ds_project;
DROP TABLE cbp_team_user;
DROP TABLE cbp_user_project;
DROP TABLE cbp_user_report_share;
DROP TABLE cbp_user_rule_list;
DROP TABLE cbp_user_security;
DROP TABLE cbp_user_selection_choice;
DROP TABLE cbp_waiver;
DROP TABLE cbp_waiver_type;
DROP TABLE cbp_xplan_dba_comment;
DROP TABLE cbp_adf_object_map;
DROP TABLE cbp_code_object_git;
DROP TABLE cbp_exit_entry_crit;
DROP TABLE cbp_user_proj_rel_branch;

DROP TABLE cbp_tkt;
DROP TABLE cbp_tkt_app_env;
DROP TABLE cbp_tkt_app_env_promo;
DROP TABLE cbp_tkt_app_env_res;
DROP TABLE cbp_tkt_app_landscape;
DROP TABLE cbp_tkt_app_misc_config;
DROP TABLE cbp_tkt_app_release_tag;
DROP TABLE cbp_tkt_app_user;
DROP TABLE cbp_tkt_app_user_role;
DROP TABLE cbp_tkt_arte_node_prop;
DROP TABLE cbp_tkt_artefact;
DROP TABLE cbp_tkt_artefact_dep_status;
DROP TABLE cbp_tkt_artefact_f_r_tracker;
DROP TABLE cbp_tkt_artefact_f_r_type;
DROP TABLE cbp_tkt_artefact_notif_group;
DROP TABLE cbp_tkt_artefact_rel;
DROP TABLE cbp_tkt_artefact_type;
DROP TABLE cbp_tkt_asset_type;
DROP TABLE cbp_tkt_call_type;
DROP TABLE cbp_tkt_cmd_prop;
DROP TABLE cbp_tkt_cmd_type;
DROP TABLE cbp_tkt_code_tag;
DROP TABLE cbp_tkt_code_tag_rel;
DROP TABLE cbp_tkt_code_type;
DROP TABLE cbp_tkt_email_detail;
DROP TABLE cbp_tkt_form_prop;
DROP TABLE cbp_tkt_job_parameter;
DROP TABLE cbp_tkt_job_type;
DROP TABLE cbp_tkt_master_status;
DROP TABLE cbp_tkt_master_subject_area;
DROP TABLE cbp_tkt_misc_config;
DROP TABLE cbp_tkt_misc_config_type;
DROP TABLE cbp_tkt_node_prop_xform;
DROP TABLE cbp_tkt_notif_group;
DROP TABLE cbp_tkt_notif_group_member;
DROP TABLE cbp_tkt_op_type;
DROP TABLE cbp_tkt_policy;
DROP TABLE cbp_tkt_policy_category;
DROP TABLE cbp_tkt_policy_target;
DROP TABLE cbp_tkt_priority;
DROP TABLE cbp_tkt_progress_status;
DROP TABLE cbp_tkt_promo_plan;
DROP TABLE cbp_tkt_property;
DROP TABLE cbp_tkt_property_group;
DROP TABLE cbp_tkt_prx_object_type;
DROP TABLE cbp_tkt_rel_tag_env;
DROP TABLE cbp_tkt_rel_tag_type;
DROP TABLE cbp_tkt_release_tag;
DROP TABLE cbp_tkt_res;
DROP TABLE cbp_tkt_res_cred;
DROP TABLE cbp_tkt_res_misc_config;
DROP TABLE cbp_tkt_res_type;
DROP TABLE cbp_tkt_res_type_form;
DROP TABLE cbp_tkt_res_type_object;
DROP TABLE cbp_tkt_res_type_supp_op;
DROP TABLE cbp_tkt_role;
DROP TABLE cbp_tkt_role_sub_op_type;
DROP TABLE cbp_tkt_sched;
DROP TABLE cbp_tkt_sched_job_param_rel;
DROP TABLE cbp_tkt_status_type;
DROP TABLE cbp_tkt_sub_op_type;
DROP TABLE cbp_tkt_tag_used_obj_op_type;
DROP TABLE cbp_tkt_user_app_rel_priv;
DROP TABLE cbp_tkt_user_role;

CREATE TABLE cbp_odi_folder_type
(
	cbp_odi_folder_type_id  INTEGER  NOT NULL ,
	cbp_odi_folder_type_name  VARCHAR2(100)  NOT NULL 
);

CREATE TABLE cbp_act_tag
(
	act_tag_id  INTEGER  NOT NULL ,
	act_tag_name  VARCHAR2(255)  NOT NULL ,
	code_object_id  INTEGER  NULL 
);
CREATE TABLE cbp_act_tag_trans
(
	act_tag_trans_id  INTEGER  NOT NULL ,
	act_tag_id  INTEGER  NULL ,
	act_tag_trans_name  VARCHAR2(255)  NOT NULL,
	automation_test_candidate VARCHAR2(1) NULL,
	act_tag_trans_port_list_json VARCHAR2(1000) NULL
);
CREATE TABLE cbp_asset_type
(
	asset_type_id  INTEGER  NOT NULL ,
	asset_type_name  VARCHAR2(100)  NULL ,
	landing_page_disp_pos  INTEGER  NULL 
);
CREATE TABLE cbp_batch_group
(
	batch_group_id  INTEGER  NOT NULL ,
	batch_group_name  VARCHAR2(200)  NOT NULL ,
	cbp_user_id  INTEGER  NULL ,
	created_timestamp  DATE  NOT NULL ,
	updated_timestamp  DATE  NOT NULL ,
	comments  VARCHAR2(200)  NULL ,
	is_manual  VARCHAR2(1)  NULL ,
	notif_group_id  INTEGER  NULL 
);
CREATE TABLE cbp_batch_group_run_detail
(
	batch_group_run_detail_id  INTEGER  NOT NULL ,
	batch_group_start_dt  DATE  NULL ,
	batch_group_end_dt  DATE  NULL ,
	batch_group_id  INTEGER  NULL ,
	cbp_user_id  INTEGER  NULL ,
	cbp_metrics_report_id  INTEGER  NULL ,
	batch_run_message  VARCHAR2(2000)  NULL ,
	master_status_id  INTEGER  NULL 
);
CREATE TABLE cbp_bobject_type
(
	bobject_type_id  INTEGER  NOT NULL ,
	bobject_type_name  VARCHAR2(200)  NOT NULL ,
	is_enabled  VARCHAR2(1)  NULL 
);
CREATE TABLE cbp_category
(
	cbp_category_id  INTEGER  NOT NULL ,
	cbp_category_name  VARCHAR2(100)  NOT NULL ,
	cbp_category_short_desc  VARCHAR2(200)  NOT NULL ,
	cbp_created_timestamp  DATE  NULL ,
	cbp_updated_timestamp  DATE  NULL 
);
CREATE TABLE cbp_cmd_config
(
	cmd_config_id  INTEGER  NOT NULL ,
	cmd_config_name  VARCHAR2(100)  NULL ,
	cmd_type_id  INTEGER  NULL ,
	host_name  VARCHAR2(100)  NULL ,
	host_ip_address  VARCHAR2(100)  NULL ,
	command_path  VARCHAR2(255)  NULL ,
	port_no  INTEGER  NULL ,
	user_name  VARCHAR2(100)  NULL ,
	password  VARCHAR2(200)  NULL ,
	ssh_path  VARCHAR2(200)  NULL,
	workdirectory 	VARCHAR2(255),
	private_key_loc VARCHAR2(255)
);
CREATE TABLE cbp_cmd_type
(
	cmd_type_id  INTEGER  NOT NULL ,
	cmd_type_name  VARCHAR2(100)  NULL 
);
CREATE TABLE cbp_code_object
(
	code_object_id  INTEGER  NOT NULL ,
	code_object_name  VARCHAR2(255)  NOT NULL ,
	prx_object_type_id  INTEGER  NOT NULL ,
	cbp_project_id  INTEGER  NOT NULL ,
	ds_object_id  VARCHAR2(64)  NULL ,
	ds_version_id  INTEGER  NULL ,
	infa_object_created_date  DATE  NULL ,
	ds_object_created_date  DATE  NULL ,
	infa_object_id  INTEGER  NULL ,
	infa_version_id  INTEGER  NULL ,
	cbp_repository_id  INTEGER  NULL ,
	cbp_ds_project_id  VARCHAR2(64)  NULL ,
	cbp_folder_id  INTEGER  NULL ,
	cbp_folder_id_v  VARCHAR2(64)  NULL 
);
CREATE TABLE cbp_code_review_status
(
	cbp_project_id  INTEGER  NOT NULL ,
	cbp_repository_id  INTEGER  NOT NULL ,
	selection_id  INTEGER  NOT NULL ,
	selection_type_id  INTEGER  NOT NULL ,
	bobject_id  INTEGER  NOT NULL ,
	bobject_type_id  INTEGER  NOT NULL ,
	rule_list_id  INTEGER  NOT NULL ,
	rule_list_type  VARCHAR2(1)  NOT NULL ,
	master_status_id_auto  INTEGER  NULL ,
	master_status_id_manual  INTEGER  NULL ,
	cbp_user_id  INTEGER  NULL ,
	comments  VARCHAR2(500)  NULL ,
	approval_flag  VARCHAR2(1)  NULL ,
	label_prev_max_apply_date  DATE  NULL ,
	review_date  DATE  NULL ,
	cbp_review_status_id  INTEGER  NULL ,
	cbp_report_sobject  BLOB  NULL ,
	cbp_report_summary_sobject  BLOB  NULL ,
	approved_by_user_id  INTEGER  NULL ,
	curr_n_prev_content  BLOB  NULL ,
	is_compressed  VARCHAR2(1)  NULL ,
	blob_uuid  VARCHAR2(200)  NULL,
	review_stats VARCHAR2(500)	
);
CREATE TABLE cbp_code_type
(
	cbp_code_type_id  INTEGER  NOT NULL ,
	cbp_code_type_name  VARCHAR2(100)  NOT NULL,
	cbp_code_type_display_name	VARCHAR2(100) NULL	
);
CREATE TABLE cbp_cons_rule_trans_sql_prop
(
	consolidator_id  INTEGER  NOT NULL ,
	cbp_rule_id  INTEGER  NOT NULL ,
	master_consolidator_id  NUMBER(10)  NULL 
);
CREATE TABLE cbp_criticality_level
(
	cbp_criticality_level_id  NUMBER  NOT NULL ,
	cbp_criticality_name  VARCHAR2(20)  NOT NULL ,
	cbp_criticality_desc  VARCHAR2(200)  NULL ,
	cbp_created_timestamp  DATE  NULL ,
	cbp_updated_timestamp  DATE  NULL ,
	comments  VARCHAR2(200)  NOT NULL ,
	is_pre_approved  VARCHAR2(1)  NULL 
);
CREATE TABLE cbp_db_connection
(
	cbp_connection_id  INTEGER  NOT NULL ,
	cbp_repository_id  INTEGER  NOT NULL ,
	cbp_connection_name  VARCHAR2(100)  NOT NULL ,
	cbp_host_name  VARCHAR2(100)  NULL ,
	cbp_user_id  VARCHAR2(100)  NULL ,
	cbp_password  VARCHAR2(100)  NULL ,
	cbp_port_no  VARCHAR2(10)  NULL ,
	cbp_service_name  VARCHAR2(100)  NULL ,
	cbp_db_name  VARCHAR2(100)  NULL ,
	cbp_owner_name  VARCHAR2(100)  NULL ,
	cbp_db_type_id  INTEGER  NULL ,
	cbp_env_type_id  INTEGER  NULL ,
	cbp_is_usable  VARCHAR2(1)  NULL ,
--	nr_db_type_id  INTEGER  NULL ,
	cbp_is_imported  VARCHAR2(1)  NULL 
);
CREATE TABLE cbp_db_type
(
	cbp_db_type_id  INTEGER  NOT NULL ,
	cbp_db_type_name  VARCHAR2(10)  NOT NULL ,
	cbp_db_version  VARCHAR(20)  NOT NULL ,
	cbp_db_type_code  VARCHAR2(3)  NULL ,
	cbp_version_type_code  VARCHAR2(4)  NULL 
);
CREATE TABLE cbp_ds_project
(
	cbp_ds_project_id  VARCHAR2(64)  NOT NULL ,
	cbp_repository_id  INTEGER  NULL ,
	cbp_ds_project_name  VARCHAR2(255)  NOT NULL ,
	cbp_created_timestamp  DATE  NULL ,
	cbp_updated_timestamp  DATE  NULL 
);
CREATE TABLE cbp_email_details
(
	cbp_user_id  INTEGER  NULL ,
	email  VARCHAR2(100)  NULL ,
	password  VARCHAR2(100)  NULL ,
	smtpaddress  VARCHAR2(200)  NULL ,
	smtpport  INTEGER  NULL ,
	is_relay  VARCHAR2(1)  NULL 
);
CREATE TABLE cbp_env_type
(
	cbp_env_type_id  INTEGER  NOT NULL ,
	cbp_env_type_name  VARCHAR2(50)  NOT NULL ,
	cbp_comments  VARCHAR2(200)  NOT NULL ,
	updated_ts  DATE  NULL ,
	created_ts  DATE  NULL ,
	deleted_ts  DATE  NULL ,
	is_deleted  VARCHAR2(1)  NULL ,
	is_locked  VARCHAR2(1)  NULL 
);
CREATE TABLE cbp_feature
(
	feature_id  INTEGER  NOT NULL ,
	feature_name  VARCHAR2(50)  NULL ,
	is_licensed  VARCHAR2(1)  NULL 
);
CREATE TABLE cbp_feature_supp_db_type
(
	feature_id  INTEGER  NOT NULL ,
	--nr_db_type_id  INTEGER  NULL 
	cbp_db_type_id  INTEGER  NULL 
);
CREATE TABLE cbp_folder
(
	cbp_repository_id  INTEGER  NOT NULL ,
	cbp_ds_project_id  VARCHAR2(64)  NOT NULL ,
	cbp_folder_id  INTEGER  NOT NULL ,
	cbp_folder_id_v  VARCHAR2(64)  NOT NULL ,
	cbp_folder_name  VARCHAR2(255)  NULL ,
	cbp_created_timestamp  DATE  NULL ,
	cbp_updated_timestamp  DATE  NULL 
);
CREATE TABLE cbp_idm_auth
(
	id  INTEGER  NOT NULL ,
	name  VARCHAR2(200)  NULL ,
	issuer  VARCHAR2(200)  NULL ,
	realm_name  VARCHAR2(200)  NULL ,
	realm_uri  VARCHAR2(200)  NULL ,
	client_id  VARCHAR2(200)  NULL ,
	client_secret  VARCHAR2(200)  NULL ,
	realm_oid_connect_token  VARCHAR2(200)  NULL ,
	realm_oid_connect_acct  VARCHAR2(200)  NULL ,
	realm_logout_uri  VARCHAR2(200)  NULL ,
	realm_redirect_uri  VARCHAR2(200)  NULL ,
	user_name  VARCHAR2(200)  NULL ,
	user_password  VARCHAR2(200)  NULL 
);
CREATE TABLE cbp_ipc_dom
(
	cbp_domain_id  INTEGER  NOT NULL ,
	cbp_domain_name  VARCHAR2(100)  NULL ,
	cbp_domain_host_name  VARCHAR2(100)  NULL ,
	cbp_domain_port_number  VARCHAR2(10)  NULL ,
	cbp_domain_user_id  VARCHAR2(100)  NULL ,
	cbp_domain_user_password  VARCHAR2(100)  NULL ,
	cbp_domain_service_name  VARCHAR2(100)  NULL ,
	cbp_domain_database_name  VARCHAR2(100)  NULL ,
	cbp_domain_version  VARCHAR2(20)  NULL ,
	cbp_db_type_id  INTEGER  NULL ,
	cbp_domain_owner_name  VARCHAR2(100)  NULL ,
	cbp_created_timestamp  DATE  NULL ,
	cbp_updated_timestamp  DATE  NULL 
);
CREATE TABLE cbp_ipc_int_svc
(
	cbp_int_id  INTEGER  NOT NULL ,
	cbp_int_name  VARCHAR2(100)  NULL ,
	cbp_domain_id  INTEGER  NULL ,
	cbp_ipc_host_name  VARCHAR2(100)  NULL ,
	cbp_ipc_user_id  VARCHAR2(100)  NULL ,
	cbp_ipc_user_password  VARCHAR2(100)  NULL ,
	cbp_ipc_port_number  VARCHAR2(10)  NULL ,
	cbp_ipc_host_type  VARCHAR2(100)  NULL ,
	cbp_ipc_identity_key_loc  VARCHAR2(100)  NULL ,
	cbp_created_timestamp  DATE  NULL ,
	cbp_updated_timestamp  DATE  NULL 
);
CREATE TABLE cbp_job_parameter
(
	job_parameter_id  INTEGER  NOT NULL ,
	job_parameter_name  VARCHAR2(500)  NULL ,
	job_parameter_datatype  VARCHAR2(20)  NULL ,
	job_type_id  INTEGER  NULL 
);
CREATE TABLE cbp_job_type
(
	job_type_id  INTEGER  NOT NULL ,
	job_type_name  VARCHAR2(500)  NULL 
);
CREATE TABLE cbp_ldap_connection
(
	CBP_CONNECTION_ID  INTEGER  NOT NULL ,
	CBP_CONNECTION_NAME  VARCHAR2(100)  NOT NULL ,
	CBP_HOST_NAME  VARCHAR2(100)  NULL ,
	CBP_PORT_NO  VARCHAR2(10)  NULL ,
	CBP_USER_ID  VARCHAR2(100)  NULL ,
	CBP_PASSWORD  VARCHAR2(100)  NULL ,
	CBP_LDAP_TYPE  VARCHAR2(100)  NULL ,
	CBP_LDAP_GROUP_ATTRIBUTE  VARCHAR2(2000)  NULL ,
	CBP_LDAP_DOMAIN  VARCHAR2(2000)  NULL ,
	CBP_LDAP_DOMAIN_CONTROLLER  VARCHAR2(2000)  NULL ,
	CBP_LDAP_USER_FILTER  VARCHAR2(2000)  NULL ,
	CBP_LDAP_USER_GROUPS  VARCHAR2(2000)  NULL 
);
CREATE TABLE cbp_legacy_code_manual
(
	cbp_project_id  INTEGER  NOT NULL ,
	ds_object_id  VARCHAR2(64)  NOT NULL ,
	prx_object_type_id  INTEGER  NOT NULL ,
	ds_object_name  VARCHAR2(255)  NOT NULL ,
	cbp_user_id  INTEGER  NULL ,
	created_timestamp  DATE  NOT NULL ,
	code_object_id  VARCHAR2(64)  NOT NULL,
	code_object_name  VARCHAR2(255)  NULL ,
	cbp_repository_id  INTEGER  NOT NULL ,
	cbp_ds_project_id  VARCHAR2(64)  NOT NULL ,
	cbp_folder_id  INTEGER  NOT NULL ,
	cbp_folder_id_v  VARCHAR2(64)  NOT NULL 
);
CREATE TABLE cbp_license
(
	cbp_license_id  INTEGER  NOT NULL ,
	cbp_license_key  VARCHAR(500)  NOT NULL ,
	cbp_license_start_date  DATE  NOT NULL ,
	cbp_license_end_date  DATE  NOT NULL ,
	cbp_license_comments  VARCHAR(500)  NULL 
);
CREATE TABLE cbp_master_status
(
	master_status_id  INTEGER  NOT NULL ,
	master_status_name  VARCHAR2(50)  NOT NULL ,
	msa_id  INTEGER  NULL 
);
CREATE TABLE cbp_master_subject_area
(
	msa_id  INTEGER  NOT NULL ,
	msa_name  VARCHAR2(50)  NOT NULL ,
	msa_comments  VARCHAR2(100)  NULL 
);
CREATE TABLE cbp_metrics_report
(
	cbp_metrics_report_id  INTEGER  NOT NULL ,
	cbp_metrics_report_name  VARCHAR(500)  NULL ,
	cbp_user_id  INTEGER  NULL ,
	cbp_created_timestamp  DATE  NULL ,
	cbp_comments  VARCHAR2(200)  NULL ,
	cbp_report_sobject  BLOB  NULL ,
	cbp_report_6  BLOB  NULL ,
	cbp_report_7  BLOB  NULL ,
	cbp_report_8  BLOB  NULL ,
	cbp_report_9  BLOB  NULL ,
	is_baseline  VARCHAR2(1)  NULL ,
	baseline_comment  VARCHAR2(200)  NULL ,
	cbp_report_summary_sobject  BLOB  NULL ,
	is_compressed  VARCHAR2(1)  NULL ,
	blob_uuid  VARCHAR2(200)  NULL 
);
CREATE TABLE cbp_metrics_report_detail
(
	cbp_metrics_report_id  INTEGER  NOT NULL ,
	cbp_project_id  INTEGER  NOT NULL ,
	cbp_repository_id  INTEGER  NOT NULL ,
	cbp_object_type  VARCHAR(100)  NOT NULL ,
	cbp_object_id  VARCHAR2(64)  NOT NULL ,
	cbp_rule_id  INTEGER  NOT NULL ,
	cbp_criticality_level_id  NUMBER  NOT NULL ,
	cbp_object_name  VARCHAR2(250)  NULL ,
	cbp_rule_violation_count  INTEGER  NULL ,
	cbp_ds_project_id  VARCHAR2(64)  NOT NULL ,
	cbp_folder_id  INTEGER  NOT NULL ,
	cbp_folder_id_v  VARCHAR2(64)  NOT NULL 
);
CREATE TABLE cbp_misc_project_property
(
	cbp_project_id  INTEGER  NOT NULL ,
	cbp_misc_property_id  NUMBER  NOT NULL ,
	cbp_property_group_id  INTEGER  NOT NULL ,
	cbp_misc_value_project  VARCHAR2(50)  NULL 
);
CREATE TABLE cbp_misc_property
(
	cbp_misc_property_id  NUMBER  NOT NULL ,
	cbp_property_group_id  INTEGER  NOT NULL ,
	cbp_misc_property_name  VARCHAR2(100)  NOT NULL ,
	cbp_misc_property_value  VARCHAR2(50)  NOT NULL ,
	cbp_misc_property_value_site  VARCHAR2(50)  NULL ,
	cbp_misc_property_data_type  VARCHAR2(50)  NOT NULL 
);
CREATE TABLE cbp_notif_group
(
	notif_group_id  INTEGER  NOT NULL ,
	notif_group_name  VARCHAR2(200)  NOT NULL ,
	notif_group_owner  INTEGER  NULL 
);
CREATE TABLE cbp_notif_group_member
(
	notif_group_id  INTEGER  NOT NULL ,
	cbp_user_id  INTEGER  NOT NULL 
);
CREATE TABLE cbp_notif_group_signal
(
	notif_group_id  INTEGER  NOT NULL ,
	signal_id  INTEGER  NOT NULL ,
	signal_type_id  INTEGER  NOT NULL 
);
/*
CREATE TABLE cbp_nr_db_type
(
	nr_db_type_id  INTEGER  NOT NULL ,
	nr_db_type_name  VARCHAR2(10)  NOT NULL ,
	nr_db_version  VARCHAR(20)  NOT NULL ,
	nr_db_type_code  VARCHAR2(3)  NULL ,
	nr_version_type_code  VARCHAR2(4)  NULL 
);
*/
CREATE TABLE cbp_object_signal_audit
(
	act_tag_id  INTEGER  NOT NULL ,
	cbp_tag_id  NUMBER  NOT NULL ,
	cbp_agile_mode_id  INTEGER  NOT NULL ,
	signal_id  INTEGER  NOT NULL ,
	signal_type_id  INTEGER  NOT NULL ,
	signal_date  DATE  NOT NULL ,
	signal_key_type_id_1  INTEGER  NOT NULL ,
	signal_sub_id_1  INTEGER  NOT NULL ,
	signal_key_type_id_2  INTEGER  NOT NULL ,
	signal_sub_id_2  INTEGER  NOT NULL ,
	signal_key_type_id_3  INTEGER  NOT NULL ,
	signal_sub_id_3  INTEGER  NOT NULL ,
	signal_key_type_id_4  INTEGER  NOT NULL ,
	signal_sub_id_4  INTEGER  NOT NULL ,
	act_tag_trans_id  INTEGER  NOT NULL ,
	cbp_user_id  INTEGER  NULL 
);
CREATE TABLE cbp_opb_attr
(
	object_type_id  INTEGER  NOT NULL ,
	property_name  VARCHAR2(240)  NOT NULL 
);
CREATE TABLE cbp_opb_object_type
(
	object_type_id  INTEGER  NOT NULL ,
	object_type_name  VARCHAR2(240)  NULL 
);
CREATE TABLE cbp_parameter
(
	cbp_parameter_id  INTEGER  NOT NULL ,
	cbp_parameter_name  VARCHAR2(200)  NOT NULL ,
	cbp_parameter_default_value  VARCHAR(500)  NULL ,
	cbp_parameter_site_value  VARCHAR(500)  NULL ,
	cbp_parameter_description  VARCHAR2(500)  NOT NULL ,
	cbp_parameter_keyword  VARCHAR2(100)  NULL ,
	cbp_parameter_place_holder  VARCHAR(100)  NULL ,
	cbp_parameter_data_type  VARCHAR(20)  NULL ,
	cbp_pattern_id  INTEGER  NULL ,
	cbp_created_timestamp  DATE  NULL ,
	cbp_updated_timestamp  DATE  NULL ,
	cbp_configurable  VARCHAR2(1)  NULL ,
	cbp_is_project_specific  VARCHAR(1)  NULL ,
	is_exception  VARCHAR2(1)  NULL ,
	is_list  VARCHAR2(1)  NULL ,
	is_regex  VARCHAR2(1)  NULL 
);
CREATE TABLE cbp_pattern
(
	cbp_pattern_id  INTEGER  NOT NULL ,
	cbp_pattern_type  VARCHAR2(100)  NOT NULL ,
	cbp_pattern_desc  VARCHAR2(200)  NULL ,
	cbp_case_sensitive  CHAR(1)  NULL ,
	cbp_action_on_match  VARCHAR2(10)  NULL ,
	cbp_comments  VARCHAR2(200)  NULL 
);
CREATE TABLE cbp_project
(
	cbp_project_id  INTEGER  NOT NULL ,
	cbp_project_name  VARCHAR2(100)  NOT NULL ,
	cbp_project_desc  VARCHAR2(100)  NOT NULL ,
	cbp_created_timestamp  DATE  NULL ,
	cbp_updated_timestamp  DATE  NULL ,
	is_deleted  VARCHAR2(1)  NULL ,
	is_locked  VARCHAR2(1)  NULL ,
	system_user  VARCHAR2(200)  NULL ,
	cbp_deleted_timestamp  DATE  NULL 
);
CREATE TABLE cbp_project_crit_pre_app
(
	cbp_project_id  INTEGER  NOT NULL ,
	cbp_criticality_level_id  NUMBER  NOT NULL 
);
CREATE TABLE cbp_project_folder
(
	cbp_project_id  INTEGER  NOT NULL ,
	cbp_repository_id  INTEGER  NOT NULL ,
	cbp_ds_project_id  VARCHAR2(64)  NOT NULL ,
	cbp_folder_id  INTEGER  NOT NULL ,
	cbp_folder_id_v  VARCHAR2(64)  NOT NULL 
);
CREATE TABLE cbp_project_parameter
(
	cbp_project_id  INTEGER  NOT NULL ,
	cbp_parameter_id  INTEGER  NOT NULL ,
	cbp_parameter_project_value  VARCHAR(500)  NULL ,
	cbp_created_timestamp  DATE  NULL ,
	cbp_updated_timestamp  DATE  NULL 
);
CREATE TABLE cbp_project_repository
(
	cbp_project_id  INTEGER  NOT NULL ,
	cbp_repository_id  INTEGER  NOT NULL ,
	cbp_created_timestamp  DATE  NULL ,
	cbp_updated_timestamp  DATE  NULL 
);
CREATE TABLE cbp_project_rule_category
(
	cbp_project_id  INTEGER  NOT NULL ,
	cbp_rule_id  INTEGER  NOT NULL ,
	cbp_category_id  INTEGER  NOT NULL ,
	cbp_created_timestamp  DATE  NULL ,
	cbp_updated_timestamp  DATE  NULL 
);
CREATE TABLE cbp_project_rule_criticality
(
	cbp_project_id  INTEGER  NOT NULL ,
	cbp_rule_id  INTEGER  NOT NULL ,
	cbp_criticality_level_id  NUMBER  NOT NULL ,
	cbp_created_timestamp  DATE  NULL ,
	cbp_updated_timestamp  DATE  NULL 
);
CREATE TABLE cbp_project_rule_list
(
	cbp_project_id  INTEGER  NOT NULL ,
	cbp_rule_list_id  INTEGER  NOT NULL ,
	cbp_created_timestamp  DATE  NULL ,
	cbp_updated_timestamp  DATE  NULL ,
	cbp_is_mandatory  VARCHAR2(1)  NULL 
);
CREATE TABLE cbp_property_group
(
	cbp_property_group_id  INTEGER  NOT NULL ,
	cbp_property_group_name  VARCHAR2(200)  NOT NULL 
);
CREATE TABLE cbp_prx_object_type
(
	prx_object_type_id  INTEGER  NOT NULL ,
	prx_object_type_name  VARCHAR2(100)  NOT NULL ,
	cbp_code_type_id  INTEGER  NULL ,
	prx_object_type_is_enabled  VARCHAR2(1)  NULL ,
	asset_type_id  INTEGER  NULL ,
	iics_type  VARCHAR2(100)  NULL 
);
CREATE TABLE cbp_repo_pair
(
	cbp_repository_id_from  INTEGER  NOT NULL ,
	cbp_repository_id_to  INTEGER  NOT NULL 
);
CREATE TABLE cbp_repository
(
	cbp_repository_id  INTEGER  NOT NULL ,
	cbp_repository_name  VARCHAR2(100)  NULL ,
	cbp_repository_host_name  VARCHAR2(100)  NULL ,
	cbp_repository_user_id  VARCHAR2(100)  NULL ,
	cbp_repository_version  VARCHAR2(20)  NULL ,
	cbp_repository_user_password  VARCHAR2(100)  NULL ,
	cbp_repository_port_number  VARCHAR2(10)  NULL ,
	cbp_repository_service_name  VARCHAR2(100)  NULL ,
	cbp_repository_database_name  VARCHAR2(100)  NULL ,
	cbp_repository_owner_name  VARCHAR2(100)  NULL ,
	cbp_db_type_id  INTEGER  NULL ,
	cbp_repository_type_id  INTEGER  NULL ,
	cbp_created_timestamp  DATE  NULL ,
	cbp_updated_timestamp  DATE  NULL ,
	cbp_env_type_id  INTEGER  NULL ,
	ds_rep_name  VARCHAR2(250)  NULL ,
	cbp_ds_tab_prefix  VARCHAR2(100)  NULL ,
	cbp_ds_tab_suffix  VARCHAR2(100)  NULL ,
	cmd_config_id  INTEGER  NULL ,
	iics_url  VARCHAR2(500)  NULL ,
	org_name  VARCHAR2(200)  NULL ,
	org_id  VARCHAR2(200)  NULL ,
	cbp_vcs_url  VARCHAR2(500)  NULL ,
	cbp_vcs_url_root  VARCHAR2(500)  NULL ,
	infa_rep_name  VARCHAR2(100)  NULL,
	cbp_tenant_id VARCHAR2(100),
	cbp_data_factory VARCHAR2(100),
	cbp_subscription_id VARCHAR2(100),
	cbp_resource_group VARCHAR2(100),
	cbp_client_id VARCHAR2(100),
	cbp_client_secret VARCHAR2(100),
	cbp_vcs_owner VARCHAR2(100),
	cbp_vcs_token VARCHAR2(100),
	cbp_vcs_hub VARCHAR2(100),
	cbp_code_type_id INTEGER NULL,
	load_status VARCHAR2(1),
	cbp_vcs_projectname VARCHAR2(200),
	az_dtbricks_url VARCHAR2(255 BYTE),
	az_dtbricks_token VARCHAR2(255 BYTE)
);
CREATE TABLE cbp_repository_type
(
	cbp_repository_type_id  INTEGER  NOT NULL ,
	cbp_code_type_id  INTEGER  NULL ,
	cbp_repository_version  VARCHAR(20)  NOT NULL ,
	cbp_repository_type_code  VARCHAR2(10)  NOT NULL ,
	cbp_repository_version_code  VARCHAR2(10)  NOT NULL 
);
CREATE TABLE cbp_rev_history_det
(
	act_tag_id  INTEGER  NULL ,
	rev_date  DATE  NULL ,
	cbp_rule_id  INTEGER  NULL 
);
CREATE TABLE cbp_rev_history_sum
(
	act_tag_id  INTEGER  NOT NULL ,
	rev_date  DATE  NOT NULL ,
	cbp_rule_list_id  INTEGER  NULL ,
	rule_list_type  VARCHAR2(20)  NULL ,
	reviewed_by  INTEGER  NULL ,
	authored_by  INTEGER  NULL ,
	modified_date  DATE  NULL ,
	violation_master_status_id  INTEGER  NULL ,
	risk_type_master_status_id  INTEGER  NULL ,
	approved_by  INTEGER  NULL ,
	approval_flag  VARCHAR2(1)  NULL ,
	comments  VARCHAR2(500)  NULL ,
	is_automated  VARCHAR2(1)  NULL ,
	report_sobject  BLOB  NULL ,
	is_compressed  VARCHAR2(1)  NULL ,
	blob_uuid  VARCHAR2(200)  NULL,
	vcs_identifier VARCHAR2(255) NULL,
	vcs_supp_data BLOB  NULL,
	vcs_res_id	INTEGER NULL,
	vcs_content_identifier VARCHAR2(255 BYTE),
	vcs_id NUMBER
);
CREATE TABLE cbp_rule
(
	cbp_rule_id  INTEGER  NOT NULL ,
	cbp_rule_short_desc  VARCHAR2(500)  NOT NULL ,
	cbp_rule_name  VARCHAR2(500)  NOT NULL ,
	cbp_object_type  VARCHAR2(50)  NULL ,
	cbp_code_type_id  INTEGER  NULL ,
	cbp_imp_type_id  INTEGER  NULL ,
	cbp_created_timestamp  DATE  NULL ,
	cbp_updated_timestamp  DATE  NULL ,
	cbp_add_param_allowed  VARCHAR2(1)  NULL ,
	is_deprecated  VARCHAR2(1)  NULL ,
	ds_stage_type  VARCHAR2(255)  NULL ,
	ds_orch_stage_identifier  VARCHAR2(255)  NULL ,
	is_dummy  VARCHAR2(1)  NULL ,
	is_legacy  VARCHAR2(1)  NULL ,
	cbp_object_sub_type  VARCHAR2(100)  NULL ,
	exception_column  VARCHAR2(30)  NULL ,
	allow_exceptions  VARCHAR2(1)  NULL 
);
CREATE TABLE cbp_rule_category
(
	cbp_rule_id  INTEGER  NOT NULL ,
	cbp_category_id  INTEGER  NOT NULL ,
	cbp_created_timestamp  DATE  NULL ,
	cbp_updated_timestamp  DATE  NULL 
);
CREATE TABLE cbp_rule_commentary
(
	cbp_rule_id  INTEGER  NOT NULL ,
	rule_name  VARCHAR2(500)  NOT NULL ,
	applies_to  VARCHAR2(200)  NULL ,
	rule_description  VARCHAR2(2000)  NULL ,
	qualitative_impact  VARCHAR2(2000)  NULL ,
	severity_impact  VARCHAR2(2000)  NULL ,
	rule_compliance_benefits  VARCHAR2(2000)  NULL ,
	non_compliance_motives  VARCHAR2(2000)  NULL ,
	acceptable_motives  VARCHAR2(2000)  NULL ,
	rule_level  VARCHAR2(20)  NULL ,
	is_deprecated  VARCHAR2(100)  NULL ,
	rule_illustration_name  VARCHAR2(200)  NULL ,
	rule_description_customer  VARCHAR2(2000)  NULL ,
	disable_default_description  VARCHAR2(1)  NULL ,
	customer_modified_flag  VARCHAR2(1)  NULL 
);
CREATE TABLE cbp_rule_criticality
(
	cbp_rule_id  INTEGER  NOT NULL ,
	cbp_criticality_level_id  NUMBER  NOT NULL ,
	cbp_created_timestamp  DATE  NULL ,
	cbp_updated_timestamp  DATE  NULL 
);
CREATE TABLE cbp_rule_imp_type
(
	cbp_imp_type_id  INTEGER  NOT NULL ,
	cbp_imp_type_desc  VARCHAR2(100)  NOT NULL ,
	cbp_comments  VARCHAR2(100)  NOT NULL 
);
CREATE TABLE cbp_rule_list
(
	cbp_rule_list_id  INTEGER  NOT NULL ,
	cbp_rule_id  INTEGER  NOT NULL ,
	cbp_rule_list_name  VARCHAR2(100)  NOT NULL ,
	cbp_code_type_id  INTEGER  NULL ,
	cbp_created_timestamp  DATE  NULL ,
	cbp_updated_timestamp  DATE  NULL ,
	is_deleted  VARCHAR2(1)  NULL 
);
CREATE TABLE cbp_rule_list_group
(
	rule_list_group_id  INTEGER  NOT NULL ,
	rule_list_id  INTEGER  NOT NULL ,
	rule_list_type  VARCHAR2(20)  NOT NULL ,
	rule_list_group_name  VARCHAR2(200)  NOT NULL ,
	cbp_project_id  INTEGER  NULL ,
	is_deleted  VARCHAR2(1)  NULL 
);
CREATE TABLE cbp_rule_parameter
(
	cbp_rule_id  INTEGER  NOT NULL ,
	cbp_parameter_id  INTEGER  NOT NULL ,
	cbp_created_timestamp  DATE  NULL ,
	cbp_updated_timestamp  DATE  NULL 
);
CREATE TABLE cbp_rule_property
(
	cbp_rule_id  INTEGER  NOT NULL ,
	object_type_id  INTEGER  NOT NULL ,
	property_name  VARCHAR2(240)  NOT NULL 
);
CREATE TABLE cbp_rule_q_mapper
(
	cbp_rule_id  INTEGER  NOT NULL ,
	cbp_db_type_id  INTEGER  NOT NULL ,
	cbp_repository_type_id  INTEGER  NOT NULL ,
	cbp_rule_q_id  VARCHAR2(50)  NOT NULL ,
	cbp_created_timestamp  DATE  NULL ,
	cbp_updated_timestamp  DATE  NULL ,
	comments  VARCHAR2(200)  NULL ,
	cbp_rule_q_id_depgroup  VARCHAR2(50)  NULL ,
	cbp_rule_q_id_label  VARCHAR2(50)  NULL 
);
CREATE TABLE cbp_rule_xpath_map
(
	xpath_id  INTEGER  NOT NULL ,
	cbp_rule_id  INTEGER  NOT NULL 
);
CREATE TABLE cbp_sched
(
	schedule_id  INTEGER  NOT NULL ,
	schedule_name  VARCHAR2(500)  NULL ,
	created_by_user  INTEGER  NULL ,
	schedule_status_id  INTEGER  NULL ,
	last_run_timestamp  DATE  NULL ,
	schedule_string_cron_format  VARCHAR2(500)  NULL 
);
CREATE TABLE cbp_sched_job_type_param_rel
(
	schedule_id  INTEGER  NOT NULL ,
	job_type_id  INTEGER  NOT NULL ,
	job_parameter_id  INTEGER  NOT NULL ,
	job_parameter_value  VARCHAR2(500)  NULL ,
	is_conditional_notify  VARCHAR2(1)  NULL 
);
CREATE TABLE cbp_selection
(
	batch_group_id  INTEGER  NOT NULL ,
	cbp_project_id  INTEGER  NOT NULL ,
	cbp_repository_id  INTEGER  NOT NULL ,
	selection_id  VARCHAR2(64)  NOT NULL ,
	selection_type_id  INTEGER  NOT NULL ,
	bobject_id  VARCHAR2(64)  NOT NULL ,
	bobject_type_id  INTEGER  NULL ,
	cbp_ds_project_id  VARCHAR2(64)  NOT NULL ,
	cbp_rule_list_id  INTEGER  NULL ,
	rule_list_type  VARCHAR2(1)  NOT NULL ,
	comments  VARCHAR2(200)  NULL ,
	selection_id_v  VARCHAR2(64)  NOT NULL 
);
CREATE TABLE cbp_selection_type
(
	selection_type_id  INTEGER  NOT NULL ,
	selection_type_name  VARCHAR2(50)  NOT NULL ,
	is_enabled  VARCHAR2(1)  NOT NULL 
);
CREATE TABLE cbp_signal
(
	signal_id  INTEGER  NOT NULL ,
	signal_type_id  INTEGER  NOT NULL ,
	signal_name  VARCHAR2(500)  NULL ,
	signal_is_enabled  VARCHAR2(1)  NULL ,
	signal_is_auto  VARCHAR2(1)  NULL ,
	prx_object_type_id  INTEGER  NULL ,
	signal_is_good  VARCHAR2(1)  NULL ,
	is_granular  VARCHAR2(1)  NULL ,
	is_env_dependent  VARCHAR2(1)  NULL ,
	disabled_dt  DATE  NULL ,
	updated_by_user_id  INTEGER  NULL ,
	is_deleted  VARCHAR2(1)  NULL 
);
CREATE TABLE cbp_signal_key_type
(
	signal_key_type_id  INTEGER  NOT NULL ,
	signal_key_type_name  VARCHAR2(200)  NOT NULL 
);
CREATE TABLE cbp_signal_type
(
	signal_type_id  INTEGER  NOT NULL ,
	signal_type_name  VARCHAR2(100)  NOT NULL ,
	signal_type_description  VARCHAR2(200)  NULL ,
	signal_abbr  VARCHAR2(20)  NULL ,
	msa_id  INTEGER  NULL ,
	is_enabled  VARCHAR2(1)  NULL ,
	disabled_dt  DATE  NULL ,
	updated_by_user_id  INTEGER  NULL ,
	signal_has_assoc_report  VARCHAR2(1)  NULL 
);
CREATE TABLE cbp_sql_kpi
(
	sql_kpi_id  INTEGER  NOT NULL ,
	sql_kpi_desc  VARCHAR2(250)  NULL 
);
CREATE TABLE cbp_sso_auth
(
	cbp_sso_id  INTEGER  NOT NULL ,
	cbp_sso_name  VARCHAR2(100)  NULL ,
	cbp_sso_tenant_id  VARCHAR2(200)  NULL ,
	cbp_sso_app_id  VARCHAR2(200)  NULL ,
	cbp_sso_object_id  VARCHAR2(200)  NULL ,
	cbp_sso_app_login_url  VARCHAR2(200)  NULL ,
	cbp_sso_ad_identifier_url  VARCHAR2(200)  NULL ,
	cbp_sso_app_logout_url  VARCHAR2(200)  NULL ,
	cbp_sso_app_start_url  VARCHAR2(200)  NULL 
);
CREATE TABLE cbp_ta_xpath
(
	xpath_id  INTEGER  NOT NULL ,
	xpath_name  VARCHAR2(2000)  NULL ,
	xpath_comments  VARCHAR2(500)  NULL 
);
CREATE TABLE cbp_table_rule_supp
(
	table_name  VARCHAR2(255)  NOT NULL ,
	table_prop_type  VARCHAR2(20)  NOT NULL ,
	table_estimated_volume  NUMBER(38)  NULL 
);
CREATE TABLE cbp_team
(
	team_id  INTEGER  NOT NULL ,
	team_name  VARCHAR2(200)  NULL ,
	freeze_access  VARCHAR2(1)  NOT NULL 
);
CREATE TABLE cbp_team_ds_project
(
	team_id  INTEGER  NOT NULL ,
	cbp_ds_project_id  VARCHAR2(64)  NOT NULL ,
	cbp_repository_id  INTEGER  NOT NULL 
);
CREATE TABLE cbp_team_user
(
	team_id  INTEGER  NOT NULL ,
	cbp_user_id  INTEGER  NOT NULL ,
	freeze_access  VARCHAR2(1)  NULL 
);
CREATE TABLE cbp_user_project
(
	cbp_user_id  INTEGER  NOT NULL ,
	cbp_project_id  INTEGER  NOT NULL ,
	cbp_is_admin  VARCHAR2(20)  NOT NULL ,
	cbp_created_timestamp  DATE  NULL ,
	cbp_updated_timestamp  DATE  NULL 
);
CREATE TABLE cbp_user_report_share
(
	cbp_user_id  INTEGER  NOT NULL ,
	cbp_metrics_report_id  INTEGER  NOT NULL ,
	is_share_allowed  VARCHAR2(1)  NULL 
);
CREATE TABLE cbp_user_rule_list
(
	cbp_user_id  INTEGER  NOT NULL ,
	cbp_rule_list_id  INTEGER  NOT NULL ,
	cbp_rule_id  INTEGER  NOT NULL ,
	cbp_user_rule_list_name  VARCHAR2(100)  NOT NULL ,
	cbp_created_timestamp  DATE  NULL ,
	cbp_updated_timestamp  DATE  NULL ,
	cbp_is_shared  VARCHAR2(1)  NULL ,
	cbp_is_mandatory  VARCHAR2(1)  NULL ,
	is_deleted  VARCHAR2(1)  NULL 
);
CREATE TABLE cbp_user_security
(
	cbp_user_id  INTEGER  NOT NULL ,
	cbp_user_name  VARCHAR2(240)  NOT NULL ,
	cbp_user_password  VARCHAR2(240)  NULL ,
	cbp_is_site_admin  VARCHAR2(20)  NOT NULL ,
	cbp_user_email_id  VARCHAR2(250)  NOT NULL ,
	cbp_created_timestamp  DATE  NULL ,
	cbp_updated_timestamp  DATE  NULL ,
	cbp_bulk_select_is_enabled  VARCHAR2(1)  NULL ,
	cbp_live_review_is_enabled  VARCHAR2(1)  NULL ,
	cbp_rev_from_rpt_is_enabled  VARCHAR2(1)  NULL ,
	can_create_batch_for_run  VARCHAR2(1)  NULL ,
	can_create_user_rule_list  VARCHAR2(1)  NULL ,
	default_window_duration  INTEGER  NULL ,
	cbp_rule_comment_edit_enabled  VARCHAR2(1)  NULL ,
	cbp_user_type  VARCHAR2(10)  NULL ,
	can_import_folder  VARCHAR2(1)  NULL ,
	cbp_is_deployment_approver  VARCHAR2(1)  NULL ,
	is_deleted  VARCHAR2(1)  NULL ,
	is_locked  VARCHAR2(1)  NULL ,
	is_global_dashboard_enabled  VARCHAR2(1)  NULL 
);
CREATE TABLE cbp_user_selection_choice
(
	selection_id  INTEGER  NOT NULL ,
	selection_name  VARCHAR2(200)  NULL ,
	cbp_user_id  INTEGER  NOT NULL ,
	selection_ts  DATE  NOT NULL ,
	selection_json  VARCHAR2(1500)  NULL 
);
CREATE TABLE cbp_waiver
(
	cbp_project_id  INTEGER  NOT NULL ,
	cbp_repository_id  INTEGER  NOT NULL ,
	cbp_object_id  VARCHAR2(64)  NOT NULL ,
	cbp_object_type  VARCHAR2(100)  NOT NULL ,
	cbp_rule_id  INTEGER  NOT NULL ,
	cbp_created_by_user_id  INTEGER  NOT NULL ,
	cbp_updated_by_user_id  INTEGER  NOT NULL ,
	cbp_waiver_name  VARCHAR2(100)  NULL ,
	cbp_object_name  VARCHAR2(250)  NULL ,
	cbp_waiver_start_dt  DATE  NOT NULL ,
	cbp_waiver_end_dt  DATE  NULL ,
	waiver_comment  VARCHAR2(500)  NULL ,
	waiver_type_id  INTEGER  NULL ,
	ignore_for_approval  VARCHAR2(1)  NULL ,
	cbp_ds_project_id  VARCHAR2(64)  NOT NULL ,
	cbp_folder_id  INTEGER  NOT NULL ,
	cbp_folder_id_v  VARCHAR2(64)  NOT NULL 
);
CREATE TABLE cbp_waiver_type
(
	waiver_type_id  INTEGER  NOT NULL ,
	waiver_type_name  VARCHAR2(50)  NULL ,
	default_duration  INTEGER  NULL ,
	site_duration  INTEGER  NULL ,
	is_permanent  VARCHAR2(1)  NULL 
);
CREATE TABLE cbp_xplan_dba_comment
(
	act_tag_id  INTEGER  NOT NULL ,
	act_tag_trans_id  INTEGER  NOT NULL ,
	xplan_date  DATE  NOT NULL ,
	cbp_connection_id  INTEGER  NOT NULL ,
	xplan_by_user_id  INTEGER  NULL ,
	dba_comment  VARCHAR2(2000)  NULL ,
	is_critical  VARCHAR2(1)  NULL ,
	is_must_fix_before_deploy  VARCHAR2(1)  NULL ,
	sql_string  CLOB  NULL ,
	xplan_string  CLOB  NULL 
);

CREATE TABLE cbp_adf_object_map
(
	cbp_repository_id  INTEGER  NOT NULL ,
	dataflow_name  VARCHAR2(255)  NOT NULL ,
	pipeline_name  VARCHAR2(255)  NOT NULL ,
	pipeline_run_id  VARCHAR2(255)  NOT NULL ,
	pipeline_run_date  VARCHAR2(100)  NULL
);

CREATE TABLE cbp_code_object_git
(
	code_object_id INTEGER NOT NULL ,
	code_object_name VARCHAR2(255) NOT NULL ,
	prx_object_type_id INTEGER NOT NULL ,
	cbp_repository_id INTEGER NULL ,
	cbp_ds_project_id VARCHAR2(64) NULL,
	cbp_folder_id INTEGER NULL,
	cbp_sha_id VARCHAR2(255) NULL
);

CREATE TABLE cbp_exit_entry_crit
(
	cbp_criticality_level_id  NUMBER  NOT NULL ,
	cbp_env_type_id  INTEGER  NOT NULL,	
	exit_entry_type  VARCHAR2(100)  NOT NULL ,
	threshold_count  INTEGER  NULL ,
	last_modified_by_user_id  INTEGER  NULL
);

CREATE TABLE cbp_user_proj_rel_branch
(
	cbp_user_id  INTEGER  NOT NULL ,
	cbp_project_id  INTEGER  NOT NULL ,
	res_id  INTEGER  NOT NULL 
);

CREATE TABLE cbp_tkt
(
	tkt_id  VARCHAR2(50)  NOT NULL ,
	tkt_system_res_id  INTEGER  NOT NULL ,
	tkt_status_type_id  INTEGER  NOT NULL ,
	tkt_permission_status_id  INTEGER  NULL ,
	cbp_user_id  INTEGER  NULL ,
	approver_id  INTEGER  NULL ,
	approver_comment  VARCHAR2(250)  NULL ,
	requester_id  INTEGER  NULL ,
	requester_comment  VARCHAR2(250)  NULL ,
	priority_type_id  INTEGER  NULL ,
	created_ts  DATE  NULL ,
	updated_ts  DATE  NULL 
);
CREATE TABLE cbp_tkt_app_env
(
	cbp_project_id  INTEGER  NOT NULL ,
	env_type_id  INTEGER  NOT NULL ,
	updated_ts  DATE  NULL ,
	created_ts  DATE  NULL ,
	deleted_ts  DATE  NULL ,
	is_deleted  VARCHAR2(1)  NULL ,
	is_locked  VARCHAR2(1)  NULL 
);
CREATE TABLE cbp_tkt_app_env_promo
(
	cbp_project_id  INTEGER  NOT NULL ,
	env_type_id  INTEGER  NOT NULL ,
	promotion_order  INTEGER  NOT NULL ,
	created_ts  DATE  NULL ,
	updated_ts  DATE  NULL ,
	deleted_ts  DATE  NULL ,
	is_deleted  VARCHAR2(1)  NULL 
);
CREATE TABLE cbp_tkt_app_env_res
(
	cbp_project_id  INTEGER  NOT NULL ,
	env_type_id  INTEGER  NOT NULL ,
	res_id  INTEGER  NOT NULL ,
	created_ts  DATE  NULL ,
	updated_ts  DATE  NULL ,
	deleted_ts  DATE  NULL ,
	is_deleted  VARCHAR2(1)  NULL 
);
CREATE TABLE cbp_tkt_app_landscape
(
	cbp_project_id  INTEGER  NOT NULL ,
	source_env_type_id  INTEGER  NOT NULL ,
	source_res_id  INTEGER  NOT NULL ,
	target_env_type_id  INTEGER  NOT NULL ,
	target_res_id  INTEGER  NOT NULL ,
	is_burst_allowed_intra_env  VARCHAR2(1)  NULL ,
	is_burst_through_allowed  VARCHAR2(1)  NULL ,
	created_ts  DATE  NULL ,
	updated_ts  DATE  NULL ,
	deleted_ts  DATE  NULL ,
	is_deleted  VARCHAR2(1)  NULL 
);
CREATE TABLE cbp_tkt_app_misc_config
(
	cbp_project_id  INTEGER  NOT NULL ,
	misc_config_id  INTEGER  NOT NULL ,
	is_default  VARCHAR2(1)  NULL 
);
CREATE TABLE cbp_tkt_app_release_tag
(
	cbp_project_id  INTEGER  NOT NULL ,
	release_tag_id  INTEGER  NOT NULL ,
	modified_by  INTEGER  NULL ,
	created_ts  DATE  NULL ,
	updated_ts  DATE  NULL ,
	is_deleted  VARCHAR2(1)  NULL 
);
CREATE TABLE cbp_tkt_app_user
(
	cbp_project_id  INTEGER  NOT NULL ,
	cbp_user_id  INTEGER  NOT NULL ,
	is_admin  VARCHAR2(1)  NULL ,
	is_deleted  VARCHAR2(1)  NULL ,
	updated_ts  DATE  NULL ,
	deleted_ts  DATE  NULL 
);
CREATE TABLE cbp_tkt_app_user_role
(
	cbp_project_id  INTEGER  NOT NULL ,
	cbp_user_id  INTEGER  NOT NULL ,
	role_id  INTEGER  NOT NULL ,
	created_ts  DATE  NULL ,
	updated_ts  DATE  NULL ,
	deleted_ts  DATE  NULL ,
	is_deleted  VARCHAR2(1)  NULL 
);
CREATE TABLE cbp_tkt_arte_node_prop
(
	artefact_type_id  INTEGER  NOT NULL ,
	node_name  VARCHAR2(200)  NOT NULL ,
	property_name  VARCHAR2(500)  NOT NULL 
);
CREATE TABLE cbp_tkt_artefact
(
	artefact_id  INTEGER  NOT NULL ,
	artefact_type_id  INTEGER  NULL ,
	artefact_name  VARCHAR2(500)  NULL ,
	artefact_3rdparty_id  VARCHAR2(200)  NULL ,
	artefact_vcs_filepath  VARCHAR2(500)  NULL ,
	artefact_f_r_type_id  INTEGER  NULL ,
	requires_manual_rollback  VARCHAR2(1)  NULL ,
	vcs_res_id  INTEGER  NOT NULL ,
	updated_ts  DATE  NULL ,
	created_ts  DATE  NULL ,
	proprietary_code_version  INTEGER  NULL ,
	proprietary_code_changed_ts  DATE  NULL ,
	artefact_misc_json  VARCHAR2(1000)  NULL ,
	is_common  VARCHAR2(1)  NULL 
);
CREATE TABLE cbp_tkt_artefact_dep_status
(
	artefact_dep_status_type  INTEGER  NOT NULL ,
	artefact_dep_status_name  VARCHAR2(100)  NULL 
);
CREATE TABLE cbp_tkt_artefact_f_r_tracker
(
	artefact_id_fwd  INTEGER  NOT NULL ,
	artefact_id_rbk  INTEGER  NULL ,
	statement_id  INTEGER  NOT NULL ,
	fwd_command  CLOB  NULL ,
	fwd_status  VARCHAR2(20)  NULL ,
	rbk_command  CLOB  NULL ,
	rbk_status  VARCHAR2(20)  NULL 
);
CREATE TABLE cbp_tkt_artefact_f_r_type
(
	artefact_f_r_type_id  INTEGER  NOT NULL ,
	artefact_f_r_type_name  VARCHAR2(20)  NULL 
);
CREATE TABLE cbp_tkt_artefact_notif_group
(
	artefact_type_id  INTEGER  NOT NULL ,
	notif_group_id  INTEGER  NOT NULL 
);
CREATE TABLE cbp_tkt_artefact_rel
(
	tkt_id  VARCHAR2(50)  NOT NULL ,
	tkt_system_res_id  INTEGER  NOT NULL ,
	artefact_id  INTEGER  NOT NULL ,
	created_ts  DATE  NULL ,
	updated_ts  DATE  NULL 
);
CREATE TABLE cbp_tkt_artefact_type
(
	artefact_type_id  INTEGER  NOT NULL ,
	artefact_type_name  VARCHAR2(50)  NULL 
);
CREATE TABLE cbp_tkt_asset_type
(
	asset_type_id  INTEGER  NOT NULL ,
	asset_type_name  VARCHAR2(100)  NULL ,
	landing_page_disp_pos  INTEGER  NULL 
);
CREATE TABLE cbp_tkt_call_type
(
	call_type  INTEGER  NOT NULL ,
	call_type_name  VARCHAR2(200)  NOT NULL 
);
CREATE TABLE cbp_tkt_cmd_prop
(
	form_prop_id  INTEGER  NOT NULL ,
	cmd_type_id  INTEGER  NOT NULL ,
	form_prop_display_order  INTEGER  NULL 
);
CREATE TABLE cbp_tkt_cmd_type
(
	cmd_type_id  INTEGER  NOT NULL ,
	cmd_type_name  VARCHAR2(100)  NULL 
);
CREATE TABLE cbp_tkt_code_tag
(
	code_tag_id  INTEGER  NOT NULL ,
	cbp_project_id  INTEGER  NULL ,
	repo_res_id  INTEGER  NULL ,
	folder_res_id  INTEGER  NULL ,
	project_res_id  INTEGER  NULL ,
	sub_folder_res_id  INTEGER  NULL ,
	object_type_id  INTEGER  NULL ,
	proprietary_code_name  VARCHAR2(255)  NULL ,
	proprietary_code_id_numeric  INTEGER  NULL ,
	proprietary_code_id_string  VARCHAR2(200)  NULL ,
	proprietary_code_version_id  INTEGER  NULL ,
	proprietary_code_mod_dt  DATE  NULL ,
	parent_code_tag_id  INTEGER  NULL ,
	is_reusable  VARCHAR2(1)  NULL 
);
CREATE TABLE cbp_tkt_code_tag_rel
(
	tkt_id  VARCHAR2(50)  NOT NULL ,
	tkt_system_res_id  INTEGER  NOT NULL ,
	code_tag_id  INTEGER  NOT NULL ,
	created_ts  DATE  NULL ,
	updated_ts  DATE  NULL 
);
CREATE TABLE cbp_tkt_code_type
(
	code_type_id  INTEGER  NOT NULL ,
	code_type_name  VARCHAR2(100)  NOT NULL 
);
CREATE TABLE cbp_tkt_email_detail
(
	user_id  INTEGER  NULL ,
	email  VARCHAR2(100)  NULL ,
	password  VARCHAR2(100)  NULL ,
	smtpaddress  VARCHAR2(200)  NULL ,
	smtpport  INTEGER  NULL 
);

CREATE TABLE cbp_tkt_form_prop
(
	form_prop_id  INTEGER  NOT NULL ,
	form_prop_name  VARCHAR2(100)  NOT NULL ,
	form_prop_label  VARCHAR2(100)  NULL ,
	data_type  VARCHAR2(50)  NULL ,
	data_value  VARCHAR2(100)  NULL ,
	is_editable  VARCHAR2(1)  NULL 
);
CREATE TABLE cbp_tkt_job_parameter
(
	job_parameter_id  INTEGER  NOT NULL ,
	job_parameter_name  VARCHAR2(20)  NULL ,
	job_parameter_datatype  VARCHAR2(20)  NULL ,
	job_parameter_value  VARCHAR2(500)  NULL 
);
CREATE TABLE cbp_tkt_job_type
(
	job_type_id  INTEGER  NOT NULL ,
	job_type_name  VARCHAR2(500)  NULL 
);
CREATE TABLE cbp_tkt_master_status
(
	master_status_id  INTEGER  NOT NULL ,
	master_status_name  VARCHAR2(200)  NULL ,
	msa_id  INTEGER  NULL 
);
CREATE TABLE cbp_tkt_master_subject_area
(
	msa_id  INTEGER  NOT NULL ,
	msa_name  VARCHAR2(100)  NULL ,
	msa_comments  VARCHAR2(200)  NULL 
);
CREATE TABLE cbp_tkt_misc_config
(
	misc_config_id  INTEGER  NOT NULL ,
	misc_config_name  VARCHAR2(100)  NULL ,
	misc_config_content  CLOB  NULL ,
	misc_config_type_id  VARCHAR2(1)  NULL 
);
CREATE TABLE cbp_tkt_misc_config_type
(
	misc_config_type_id  VARCHAR2(1)  NOT NULL ,
	misc_config_type_name  VARCHAR2(100)  NULL 
);
CREATE TABLE cbp_tkt_node_prop_xform
(
	env_type_id  INTEGER  NOT NULL ,
	artefact_type_id  INTEGER  NOT NULL ,
	node_name  VARCHAR2(200)  NOT NULL ,
	property_name  VARCHAR2(500)  NOT NULL ,
	retain_from_target  VARCHAR2(1)  NULL 
);
CREATE TABLE cbp_tkt_notif_group
(
	notif_group_id  INTEGER  NOT NULL ,
	notif_group_name  VARCHAR2(200)  NOT NULL 
);
CREATE TABLE cbp_tkt_notif_group_member
(
	notif_group_id  INTEGER  NOT NULL ,
	cbp_user_id  INTEGER  NOT NULL 
);
CREATE TABLE cbp_tkt_op_type
(
	op_type_id  INTEGER  NOT NULL ,
	op_type_name  VARCHAR2(200)  NOT NULL ,
	created_ts  DATE  NULL ,
	updated_ts  DATE  NULL ,
	deleted_ts  DATE  NULL ,
	is_deleted  VARCHAR2(1)  NULL 
);
CREATE TABLE cbp_tkt_policy
(
	policy_id  INTEGER  NOT NULL ,
	policy_name  VARCHAR2(500)  NOT NULL ,
	is_enabled  VARCHAR2(1)  NULL ,
	policy_category_type_id  INTEGER  NULL ,
	is_deleted  VARCHAR2(1)  NULL ,
	created_ts  DATE  NULL ,
	updated_ts  DATE  NULL ,
	deleted_ts  DATE  NULL 
);
CREATE TABLE cbp_tkt_policy_category
(
	policy_category_type_id  INTEGER  NOT NULL ,
	policy_category_type_name  VARCHAR2(200)  NOT NULL 
);
CREATE TABLE cbp_tkt_policy_target
(
	policy_id  INTEGER  NOT NULL ,
	cbp_project_id  INTEGER  NULL ,
	env_type_id  INTEGER  NULL ,
	res_type_id  INTEGER  NULL ,
	res_id  INTEGER  NULL ,
	artefact_type_id  INTEGER  NULL ,
	is_enforced  VARCHAR2(1)  NULL ,
	created_ts  DATE  NULL ,
	updated_ts  DATE  NULL ,
	deleted_ts  DATE  NULL ,
	term_id  INTEGER  NULL 
);
CREATE TABLE cbp_tkt_priority
(
	priority_type_id  INTEGER  NOT NULL ,
	priority_name  VARCHAR2(100)  NULL ,
	turnaround_time  INTEGER  NULL ,
	escalation_time  INTEGER  NULL ,
	reminder_attempts  INTEGER  NULL 
);
CREATE TABLE cbp_tkt_progress_status
(
	id  INTEGER  NOT NULL ,
	token_id  VARCHAR2(500)  NULL ,
	release_id  VARCHAR2(500)  NULL ,
	ticket_id  VARCHAR2(500)  NULL ,
	application_id  VARCHAR2(100)  NULL ,
	application_name  VARCHAR2(100)  NULL ,
	environment_id  VARCHAR2(100)  NULL ,
	environment_type  VARCHAR2(100)  NULL ,
	status  VARCHAR2(200)  NULL ,
	target_id  VARCHAR2(100)  NULL ,
	target  VARCHAR2(100)  NULL ,
	uuid  VARCHAR2(100)  NULL ,
	summary  CLOB  NULL ,
	release_description  VARCHAR2(1000)  NULL 
);
CREATE TABLE cbp_tkt_promo_plan
(
	tkt_id  VARCHAR2(50)  NOT NULL ,
	tkt_system_res_id  INTEGER  NOT NULL ,
	artefact_id  INTEGER  NOT NULL ,
	target_res_id  INTEGER  NOT NULL ,
	target_sub_res_id  INTEGER  NULL ,
	artefact_dep_status_type  INTEGER  NULL ,
	approver_id  INTEGER  NULL ,
	approver_comment  VARCHAR2(250)  NULL ,
	requester_id  INTEGER  NULL ,
	requester_comment  VARCHAR2(250)  NULL ,
	notif_group_id  INTEGER  NULL ,
	release_tag_id  INTEGER  NULL ,
	created_ts  DATE  NULL ,
	updated_ts  DATE  NULL 
);
CREATE TABLE cbp_tkt_property
(
	property_id  NUMBER  NOT NULL ,
	property_name  VARCHAR2(100)  NULL ,
	property_value  VARCHAR2(50)  NOT NULL ,
	property_value_site  VARCHAR2(50)  NULL ,
	property_data_type  VARCHAR2(50)  NOT NULL ,
	property_group_id  NUMBER(38)  NOT NULL 
);
CREATE TABLE cbp_tkt_property_group
(
	property_group_id  NUMBER(38)  NOT NULL ,
	property_group_name  VARCHAR2(100)  NOT NULL 
);
CREATE TABLE cbp_tkt_prx_object_type
(
	prx_object_type_id  INTEGER  NOT NULL ,
	prx_object_type_name  VARCHAR2(100)  NOT NULL ,
	prx_object_type_is_enabled  VARCHAR2(1)  NULL ,
	iics_type  VARCHAR2(100)  NULL ,
	code_type_id  INTEGER  NULL ,
	asset_type_id  INTEGER  NULL 
);
CREATE TABLE cbp_tkt_rel_tag_env
(
	release_tag_id  INTEGER  NOT NULL ,
	source_env_type_id  INTEGER  NOT NULL ,
	target_env_type_id  INTEGER  NOT NULL ,
	sub_res_id  INTEGER  NOT NULL ,
	created_ts  DATE  NULL ,
	deleted_ts  DATE  NULL ,
	is_deleted  VARCHAR2(1)  NULL 
);
CREATE TABLE cbp_tkt_rel_tag_type
(
	rel_tag_type_id  INTEGER  NOT NULL ,
	rel_tag_type_name  VARCHAR2(100)  NULL ,
	res_type_id  INTEGER  NULL 
);
CREATE TABLE cbp_tkt_release_tag
(
	release_tag_id  INTEGER  NOT NULL ,
	release_tag_name  VARCHAR2(100)  NOT NULL ,
	created_ts  DATE  NULL ,
	updated_ts  DATE  NULL ,
	is_locked  VARCHAR2(1)  NOT NULL ,
	created_by  INTEGER  NULL ,
	modified_by  INTEGER  NULL ,
	rel_tag_type_id  INTEGER  NULL 
);
CREATE TABLE cbp_tkt_res
(
	res_id  INTEGER  NOT NULL ,
	res_type_id  INTEGER  NULL ,
	res_id_parent_gen_1  INTEGER  NULL ,
	res_id_parent_gen_2  INTEGER  NULL ,
	res_id_parent_gen_3  INTEGER  NULL ,
	res_id_parent_gen_4  INTEGER  NULL ,
	res_id_parent_gen_5  INTEGER  NULL ,
	res_id_parent_gen_6  INTEGER  NULL ,
	res_id_parent_gen_7  INTEGER  NULL ,
	res_id_parent_gen_8  INTEGER  NULL ,
	is_deleted  VARCHAR2(1)  NULL ,
	created_ts  DATE  NULL ,
	updated_ts  DATE  NULL ,
	deleted_ts  DATE  NULL ,
	is_locked  VARCHAR2(1)  NULL ,
	is_valid  VARCHAR2(1)  NULL ,
	needs_pwd_validation  VARCHAR2(1)  NULL 
);
CREATE TABLE cbp_tkt_res_cred
(
	res_id  INTEGER  NOT NULL ,
	res_key  VARCHAR2(200)  NOT NULL ,
	res_value  VARCHAR2(500)  NOT NULL ,
	is_encrypted  VARCHAR2(1)  NOT NULL ,
	created_ts  DATE  NULL ,
	updated_ts  DATE  NULL ,
	deleted_ts  DATE  NULL ,
	is_deleted  VARCHAR2(1)  NULL 
);
CREATE TABLE cbp_tkt_res_misc_config
(
	res_id  INTEGER  NOT NULL ,
	misc_config_id  INTEGER  NOT NULL ,
	is_default  VARCHAR2(1)  NULL 
);
CREATE TABLE cbp_tkt_res_type
(
	res_type_id  INTEGER  NOT NULL ,
	res_type_name  VARCHAR2(200)  NOT NULL ,
	created_ts  DATE  NULL ,
	updated_ts  DATE  NULL ,
	deleted_ts  DATE  NULL ,
	is_deleted  VARCHAR2(1)  NULL ,
	is_editable  VARCHAR2(1)  NULL ,
	is_enabled_in_landscape  VARCHAR2(1)  NULL ,
	cbp_code_type_id  INTEGER  NULL  
);
CREATE TABLE cbp_tkt_res_type_form
(
	res_type_id  INTEGER  NOT NULL ,
	form_prop_id  INTEGER  NOT NULL ,
	form_prop_display_order  INTEGER  NULL 
);
CREATE TABLE cbp_tkt_res_type_object
(
	object_type_id  INTEGER  NOT NULL ,
	object_type_name  VARCHAR2(200)  NULL ,
	object_type_display_name  VARCHAR2(200)  NULL ,
	res_type_id  INTEGER  NOT NULL 
);
CREATE TABLE cbp_tkt_res_type_supp_op
(
	res_type_id  INTEGER  NOT NULL ,
	op_type_id  INTEGER  NOT NULL ,
	created_ts  DATE  NULL ,
	updated_ts  DATE  NULL ,
	deleted_ts  DATE  NULL ,
	is_deleted  VARCHAR2(1)  NULL 
);
CREATE TABLE cbp_tkt_role
(
	role_id  INTEGER  NOT NULL ,
	role_name  VARCHAR2(100)  NOT NULL ,
	created_ts  DATE  NULL ,
	updated_ts  DATE  NULL ,
	deleted_ts  DATE  NULL ,
	is_deleted  VARCHAR2(1)  NULL 
);
CREATE TABLE cbp_tkt_role_sub_op_type
(
	role_id  INTEGER  NOT NULL ,
	sub_op_type_id  INTEGER  NOT NULL ,
	is_locked  VARCHAR2(1)  NULL ,
	created_ts  DATE  NULL ,
	updated_ts  DATE  NULL ,
	deleted_ts  DATE  NULL ,
	is_deleted  VARCHAR2(1)  NULL 
);
CREATE TABLE cbp_tkt_sched
(
	schedule_id  INTEGER  NOT NULL ,
	schedule_name  VARCHAR2(500)  NULL ,
	created_by_user  INTEGER  NOT NULL ,
	last_run_timestamp  DATE  NULL ,
	schedule_string_cron_format  VARCHAR2(500)  NULL ,
	master_status_id  INTEGER  NULL 
);
CREATE TABLE cbp_tkt_sched_job_param_rel
(
	schedule_id  INTEGER  NOT NULL ,
	job_type_id  INTEGER  NOT NULL ,
	job_parameter_id  INTEGER  NULL 
);
CREATE TABLE cbp_tkt_status_type
(
	tkt_status_type_id  INTEGER  NOT NULL ,
	tkt_status_type_name  VARCHAR2(100)  NULL 
);
CREATE TABLE cbp_tkt_sub_op_type
(
	sub_op_type_id  INTEGER  NOT NULL ,
	sub_op_type_name  VARCHAR2(200)  NULL ,
	op_type_id  INTEGER  NOT NULL 
);
CREATE TABLE cbp_tkt_tag_used_obj_op_type
(
	tkt_id  VARCHAR2(50)  NOT NULL ,
	tkt_system_res_id  INTEGER  NOT NULL ,
	code_tag_id  INTEGER  NOT NULL ,
	res_id  INTEGER  NOT NULL ,
	object_name  VARCHAR2(200)  NOT NULL ,
	object_type_id  INTEGER  NOT NULL ,
	op_type_id  INTEGER  NOT NULL ,
	sub_op_type_id  INTEGER  NOT NULL ,
	is_new_change  VARCHAR2(1)  NULL ,
	created_ts  DATE  NULL ,
	updated_ts  DATE  NULL ,
	deleted_ts  DATE  NULL ,
	is_deleted  VARCHAR2(1)  NULL 
);
CREATE TABLE cbp_tkt_user_app_rel_priv
(
	cbp_user_id  INTEGER  NOT NULL ,
	cbp_project_id  INTEGER  NOT NULL ,
	release_tag_id  INTEGER  NOT NULL ,
	is_enabled  VARCHAR2(1)  NULL ,
	modified_by  INTEGER  NULL ,
	updated_ts  DATE  NULL ,
	created_ts  DATE  NULL 
);
CREATE TABLE cbp_tkt_user_role
(
	cbp_user_id  INTEGER  NOT NULL ,
	role_id  INTEGER  NOT NULL ,
	created_ts  DATE  NULL ,
	deleted_ts  DATE  NULL ,
	updated_ts  DATE  NULL ,
	is_deleted  VARCHAR2(1)  NULL 
);
-- Primary Keys
ALTER TABLE cbp_odi_folder_type
	ADD CONSTRAINT  XPKcbp_odi_folder_type PRIMARY KEY (cbp_odi_folder_type_id);
ALTER TABLE cbp_act_tag
	ADD CONSTRAINT  XPKcbp_act_tag PRIMARY KEY (act_tag_id);
ALTER TABLE cbp_act_tag_trans
	ADD CONSTRAINT  XPKcbp_act_tag_trans PRIMARY KEY (act_tag_trans_id);
ALTER TABLE cbp_asset_type
	ADD CONSTRAINT  XPKcbp_asset_type PRIMARY KEY (asset_type_id);
ALTER TABLE cbp_batch_group
	ADD CONSTRAINT  XPKcbp_batch_group PRIMARY KEY (batch_group_id);
ALTER TABLE cbp_batch_group_run_detail
	ADD CONSTRAINT  XPKcbp_batch_group_run_detail PRIMARY KEY (batch_group_run_detail_id);
ALTER TABLE cbp_bobject_type
	ADD CONSTRAINT  XPKcbp_bobject_type PRIMARY KEY (bobject_type_id);
ALTER TABLE cbp_category
	ADD CONSTRAINT  XPKcbp_category PRIMARY KEY (cbp_category_id);
ALTER TABLE cbp_cmd_config
	ADD CONSTRAINT  XPKcbp_cmd_config PRIMARY KEY (cmd_config_id);
ALTER TABLE cbp_cmd_type
	ADD CONSTRAINT  XPKcbp_cmd_type PRIMARY KEY (cmd_type_id);
ALTER TABLE cbp_code_object
	ADD CONSTRAINT  XPKcbp_code_object PRIMARY KEY (code_object_id);
ALTER TABLE cbp_code_review_status
	ADD CONSTRAINT  XPKcbp_code_review_status PRIMARY KEY (cbp_project_id,cbp_repository_id,selection_id,selection_type_id,bobject_id,bobject_type_id,rule_list_id,rule_list_type);
ALTER TABLE cbp_code_type
	ADD CONSTRAINT  XPKcbp_code_type PRIMARY KEY (cbp_code_type_id);
ALTER TABLE cbp_criticality_level
	ADD CONSTRAINT  XPKcbp_criticality_level PRIMARY KEY (cbp_criticality_level_id);
ALTER TABLE cbp_db_connection
	ADD CONSTRAINT  XPKcbp_db_connections PRIMARY KEY (cbp_connection_id);
ALTER TABLE cbp_db_type
	ADD CONSTRAINT  XPKcbp_db_type PRIMARY KEY (cbp_db_type_id);
ALTER TABLE cbp_ds_project
	ADD CONSTRAINT  XPKcbp_ds_project PRIMARY KEY (cbp_repository_id,cbp_ds_project_id);
ALTER TABLE cbp_env_type
	ADD CONSTRAINT  XPKcbp_env_type PRIMARY KEY (cbp_env_type_id);
ALTER TABLE cbp_feature
	ADD CONSTRAINT  XPKcbp_feature PRIMARY KEY (feature_id);
ALTER TABLE cbp_feature_supp_db_type
	ADD CONSTRAINT  XPKcbp_feature_supp_db_type PRIMARY KEY (feature_id, cbp_db_type_id);
ALTER TABLE cbp_folder
	ADD CONSTRAINT  XPKcbp_folder PRIMARY KEY (cbp_repository_id,cbp_ds_project_id,cbp_folder_id,cbp_folder_id_v);
ALTER TABLE cbp_idm_auth
	ADD CONSTRAINT  XPKcbp_idm_auth PRIMARY KEY (id);
ALTER TABLE cbp_ipc_dom
	ADD CONSTRAINT  XPKcbp_ipc_dom PRIMARY KEY (cbp_domain_id);
ALTER TABLE cbp_ipc_int_svc
	ADD CONSTRAINT  XPKcbp_ipc_int_svc PRIMARY KEY (cbp_int_id);
ALTER TABLE cbp_job_parameter
	ADD CONSTRAINT  XPKcbp_job_parameter PRIMARY KEY (job_parameter_id);
ALTER TABLE cbp_job_type
	ADD CONSTRAINT  XPKcbp_job_type PRIMARY KEY (job_type_id);
ALTER TABLE cbp_ldap_connection
	ADD CONSTRAINT  XPKcbp_ldap_connection PRIMARY KEY (CBP_CONNECTION_ID);
ALTER TABLE cbp_legacy_code_manual
	ADD CONSTRAINT  XPKcbp_legacy_ PRIMARY KEY (cbp_project_id,cbp_repository_id,cbp_ds_project_id,cbp_folder_id,cbp_folder_id_v,ds_object_id,prx_object_type_id);
ALTER TABLE cbp_license
	ADD CONSTRAINT  XPKcbp_license PRIMARY KEY (cbp_license_id);
ALTER TABLE cbp_master_status
	ADD CONSTRAINT  XPKcbp_master_status PRIMARY KEY (master_status_id);
ALTER TABLE cbp_master_subject_area
	ADD CONSTRAINT  XPKcbp_master_subject_area PRIMARY KEY (msa_id);
ALTER TABLE cbp_metrics_report
	ADD CONSTRAINT  XPKcbp_metrics_report PRIMARY KEY (cbp_metrics_report_id);
ALTER TABLE cbp_metrics_report_detail
	ADD CONSTRAINT  XPKcbp_metrics_report_detail PRIMARY KEY (cbp_metrics_report_id,cbp_project_id,cbp_repository_id,cbp_ds_project_id,cbp_folder_id,cbp_folder_id_v,cbp_object_id,cbp_object_type,cbp_rule_id,cbp_criticality_level_id);
ALTER TABLE cbp_misc_project_property
	ADD CONSTRAINT  XPKcbp_misc_project_property PRIMARY KEY (cbp_project_id,cbp_misc_property_id,cbp_property_group_id);
ALTER TABLE cbp_misc_property
	ADD CONSTRAINT  XPKcbp_misc_property PRIMARY KEY (cbp_misc_property_id,cbp_property_group_id);
ALTER TABLE cbp_notif_group
	ADD CONSTRAINT  XPKcbp_notif_group PRIMARY KEY (notif_group_id);
ALTER TABLE cbp_notif_group_member
	ADD CONSTRAINT  XPKcbp_notif_group_member PRIMARY KEY (notif_group_id,cbp_user_id);
ALTER TABLE cbp_notif_group_signal
	ADD CONSTRAINT  XPKcbp_notif_group_signal PRIMARY KEY (notif_group_id,signal_id,signal_type_id);
/*
ALTER TABLE cbp_nr_db_type
	ADD CONSTRAINT  XPKcbp_nr_db_type PRIMARY KEY (nr_db_type_id);
*/
ALTER TABLE cbp_object_signal_audit
	ADD CONSTRAINT  XPKcbp_object_signal_audit PRIMARY KEY (act_tag_id,cbp_tag_id,cbp_agile_mode_id,signal_id,signal_type_id,signal_date,signal_key_type_id_1,signal_sub_id_1,signal_key_type_id_2,signal_sub_id_2,signal_key_type_id_3,signal_sub_id_3,signal_key_type_id_4,signal_sub_id_4);
ALTER TABLE cbp_opb_attr
	ADD CONSTRAINT  XPKcbp_opb_attr PRIMARY KEY (property_name,object_type_id);
ALTER TABLE cbp_opb_object_type
	ADD CONSTRAINT  XPKcbp_opb_object_type PRIMARY KEY (object_type_id);
ALTER TABLE cbp_parameter
	ADD CONSTRAINT  XPKcbp_parameter PRIMARY KEY (cbp_parameter_id);
ALTER TABLE cbp_pattern
	ADD CONSTRAINT  XPKcbp_pattern PRIMARY KEY (cbp_pattern_id);
ALTER TABLE cbp_project
	ADD CONSTRAINT  XPKcbp_project PRIMARY KEY (cbp_project_id);
ALTER TABLE cbp_project_crit_pre_app
	ADD CONSTRAINT  XPKcbp_project_crit_appr_overr PRIMARY KEY (cbp_project_id,cbp_criticality_level_id);
ALTER TABLE cbp_project_folder
	ADD CONSTRAINT  XPKcbp_project_folder PRIMARY KEY (cbp_project_id,cbp_repository_id,cbp_ds_project_id,cbp_folder_id,cbp_folder_id_v);
ALTER TABLE cbp_project_parameter
	ADD CONSTRAINT  XPKcbp_project_parameter PRIMARY KEY (cbp_project_id,cbp_parameter_id);
ALTER TABLE cbp_project_repository
	ADD CONSTRAINT  XPKcbp_project_repository PRIMARY KEY (cbp_project_id,cbp_repository_id);
ALTER TABLE cbp_project_rule_category
	ADD CONSTRAINT  XPKcbp_project_rule_category PRIMARY KEY (cbp_project_id,cbp_rule_id,cbp_category_id);
ALTER TABLE cbp_project_rule_criticality
	ADD CONSTRAINT  XPKcbp_project_rule_criticalit PRIMARY KEY (cbp_project_id,cbp_rule_id,cbp_criticality_level_id);
ALTER TABLE cbp_project_rule_list
	ADD CONSTRAINT  XPKcbp_project_rule_list PRIMARY KEY (cbp_project_id,cbp_rule_list_id);
ALTER TABLE cbp_property_group
	ADD CONSTRAINT  XPKcbp_property_group PRIMARY KEY (cbp_property_group_id);
ALTER TABLE cbp_prx_object_type
	ADD CONSTRAINT  XPKcbp_prx_object_type PRIMARY KEY (prx_object_type_id);
ALTER TABLE cbp_repo_pair
	ADD CONSTRAINT  XPKcbp_repo_pair PRIMARY KEY (cbp_repository_id_from,cbp_repository_id_to);
ALTER TABLE cbp_repository
	ADD CONSTRAINT  XPKcbp_repository PRIMARY KEY (cbp_repository_id);
ALTER TABLE cbp_repository_type
	ADD CONSTRAINT  XPKcbp_repository_type PRIMARY KEY (cbp_repository_type_id);
ALTER TABLE cbp_rev_history_sum
	ADD CONSTRAINT  XPKcbp_rev_history_sum PRIMARY KEY (act_tag_id,rev_date);
ALTER TABLE cbp_rule
	ADD CONSTRAINT  XPKcbp_rule PRIMARY KEY (cbp_rule_id);
ALTER TABLE cbp_rule_category
	ADD CONSTRAINT  XPKcbp_rule_category PRIMARY KEY (cbp_rule_id,cbp_category_id);
ALTER TABLE cbp_rule_commentary
	ADD CONSTRAINT  XPKcbp_rule_commentary PRIMARY KEY (cbp_rule_id);
ALTER TABLE cbp_rule_criticality
	ADD CONSTRAINT  XPKcbp_rule_criticality PRIMARY KEY (cbp_rule_id,cbp_criticality_level_id);
ALTER TABLE cbp_rule_imp_type
	ADD CONSTRAINT  XPKcbp_rule_imp_type PRIMARY KEY (cbp_imp_type_id);
ALTER TABLE cbp_rule_list
	ADD CONSTRAINT  XPKcbp_rule_list PRIMARY KEY (cbp_rule_list_id,cbp_rule_id);
ALTER TABLE cbp_rule_list_group
	ADD CONSTRAINT  XPKcbp_rule_list_group PRIMARY KEY (rule_list_group_id,rule_list_id,rule_list_type);
ALTER TABLE cbp_rule_parameter
	ADD CONSTRAINT  XPKcbp_rule_parameter PRIMARY KEY (cbp_rule_id,cbp_parameter_id);
ALTER TABLE cbp_rule_property
	ADD CONSTRAINT  XPKcbp_rule_property PRIMARY KEY (cbp_rule_id,object_type_id,property_name);
ALTER TABLE cbp_rule_q_mapper
	ADD CONSTRAINT  XPKcbp_rule_q_mapper PRIMARY KEY (cbp_rule_id,cbp_db_type_id,cbp_repository_type_id);
ALTER TABLE cbp_rule_xpath_map
	ADD CONSTRAINT  XPKcbp_rule_xpath_map PRIMARY KEY (cbp_rule_id,xpath_id);
ALTER TABLE cbp_sched
	ADD CONSTRAINT  XPKcbp_sched PRIMARY KEY (schedule_id);
ALTER TABLE cbp_sched_job_type_param_rel
	ADD CONSTRAINT  XPKcbp_job_type_param_rel PRIMARY KEY (schedule_id,job_type_id,job_parameter_id);
ALTER TABLE cbp_selection
	ADD CONSTRAINT  XPKcbp_selection PRIMARY KEY (batch_group_id,cbp_project_id,cbp_repository_id,cbp_ds_project_id,selection_id,selection_id_v,selection_type_id,bobject_id,bobject_type_id);
ALTER TABLE cbp_selection_type
	ADD CONSTRAINT  XPKcbp_selection_type PRIMARY KEY (selection_type_id);
ALTER TABLE cbp_signal
	ADD CONSTRAINT  XPKcbp_signal PRIMARY KEY (signal_id,signal_type_id);
ALTER TABLE cbp_signal_key_type
	ADD CONSTRAINT  XPKcbp_signal_key_type PRIMARY KEY (signal_key_type_id);
ALTER TABLE cbp_signal_type
	ADD CONSTRAINT  XPKcbp_signal_type PRIMARY KEY (signal_type_id);
ALTER TABLE cbp_sql_kpi
	ADD CONSTRAINT  XPKcbp_sql_kpi PRIMARY KEY (sql_kpi_id);
ALTER TABLE cbp_sso_auth
	ADD CONSTRAINT  XPKcbp_sso_auth PRIMARY KEY (cbp_sso_id);
ALTER TABLE cbp_ta_xpath
	ADD CONSTRAINT  XPKcbp_ta_xpath PRIMARY KEY (xpath_id);
ALTER TABLE cbp_table_rule_supp
	ADD CONSTRAINT  XPKcbp_table_rule_supp PRIMARY KEY (table_name,table_prop_type);
ALTER TABLE cbp_team
	ADD CONSTRAINT  XPKcbp_team PRIMARY KEY (team_id);
ALTER TABLE cbp_team_ds_project
	ADD CONSTRAINT  XPKcbp_team_ds_project PRIMARY KEY (team_id,cbp_ds_project_id,cbp_repository_id);
ALTER TABLE cbp_team_user
	ADD CONSTRAINT  XPKcbp_team_user PRIMARY KEY (team_id,cbp_user_id);
ALTER TABLE cbp_user_project
	ADD CONSTRAINT  XPKcbp_user_project PRIMARY KEY (cbp_user_id,cbp_project_id);
ALTER TABLE cbp_user_report_share
	ADD CONSTRAINT  XPKcbp_user_report_share PRIMARY KEY (cbp_user_id,cbp_metrics_report_id);
ALTER TABLE cbp_user_rule_list
	ADD CONSTRAINT  XPKcbp_user_rule_list PRIMARY KEY (cbp_user_id,cbp_rule_list_id,cbp_rule_id);
ALTER TABLE cbp_user_security
	ADD CONSTRAINT  XPKcbp_user_security PRIMARY KEY (cbp_user_id);
ALTER TABLE cbp_user_selection_choice
	ADD CONSTRAINT  XPKcbp_user_selection_choice PRIMARY KEY (selection_id);
ALTER TABLE cbp_waiver
	ADD CONSTRAINT  XPKcbp_waiver PRIMARY KEY (cbp_project_id,cbp_repository_id,cbp_ds_project_id,cbp_folder_id_v,cbp_folder_id,cbp_object_id,cbp_object_type,cbp_rule_id);
ALTER TABLE cbp_waiver_type
	ADD CONSTRAINT  XPKcbp_waiver_type PRIMARY KEY (waiver_type_id);
ALTER TABLE cbp_xplan_dba_comment
	ADD CONSTRAINT  XPKcbp_xplan_dba_comment PRIMARY KEY (act_tag_id,act_tag_trans_id,xplan_date,cbp_connection_id);
ALTER TABLE cbp_adf_object_map
	ADD CONSTRAINT  XPKcbp_adf_object_map PRIMARY KEY (cbp_repository_id,pipeline_run_id,dataflow_name);	
ALTER TABLE cbp_exit_entry_crit
	ADD CONSTRAINT  XPKcbp_exit_entry_crit PRIMARY KEY (cbp_env_type_id,cbp_criticality_level_id,exit_entry_type);
	
ALTER TABLE cbp_tkt
	ADD CONSTRAINT  XPKcbp_tkt PRIMARY KEY (tkt_id,tkt_system_res_id);
ALTER TABLE cbp_tkt_app_env
	ADD CONSTRAINT  XPKcbp_tkt_app_env PRIMARY KEY (cbp_project_id,env_type_id);
ALTER TABLE cbp_tkt_app_env_promo
	ADD CONSTRAINT  XPKcbp_tkt_app_env_promo PRIMARY KEY (cbp_project_id,env_type_id,promotion_order);
ALTER TABLE cbp_tkt_app_env_res
	ADD CONSTRAINT  XPKcbp_tkt_app_env_res PRIMARY KEY (env_type_id,res_id,cbp_project_id);
ALTER TABLE cbp_tkt_app_landscape
	ADD CONSTRAINT  XPKcbp_tkt_app_landscape PRIMARY KEY (cbp_project_id,source_env_type_id,source_res_id,target_env_type_id,target_res_id);
ALTER TABLE cbp_tkt_app_misc_config
	ADD CONSTRAINT  XPKcbp_tkt_app_misc_config PRIMARY KEY (cbp_project_id,misc_config_id);
ALTER TABLE cbp_tkt_app_release_tag
	ADD CONSTRAINT  XPKcbp_tkt_app_release_tag PRIMARY KEY (cbp_project_id,release_tag_id);
ALTER TABLE cbp_tkt_app_user
	ADD CONSTRAINT  XPKcbp_tkt_app_user PRIMARY KEY (cbp_project_id,cbp_user_id);
ALTER TABLE cbp_tkt_app_user_role
	ADD CONSTRAINT  XPKcbp_tkt_app_user_role PRIMARY KEY (cbp_project_id,cbp_user_id,role_id);
ALTER TABLE cbp_tkt_arte_node_prop
	ADD CONSTRAINT  XPKcbp_tkt_arte_node_prop PRIMARY KEY (node_name,artefact_type_id,property_name);
ALTER TABLE cbp_tkt_artefact
	ADD CONSTRAINT  XPKcbp_tkt_artefact PRIMARY KEY (artefact_id);
ALTER TABLE cbp_tkt_artefact_dep_status
	ADD CONSTRAINT  XPKcbp_tkt_artefact_dep_status PRIMARY KEY (artefact_dep_status_type);
ALTER TABLE cbp_tkt_artefact_f_r_tracker
	ADD CONSTRAINT  XPKcbp_tkt_artefact_f_r_tracke PRIMARY KEY (artefact_id_fwd,statement_id);
ALTER TABLE cbp_tkt_artefact_f_r_type
	ADD CONSTRAINT  XPKcbp_tkt_artefact_f_r_type PRIMARY KEY (artefact_f_r_type_id);
ALTER TABLE cbp_tkt_artefact_notif_group
	ADD CONSTRAINT  XPKcbp_tkt_artefact_notif_grou PRIMARY KEY (artefact_type_id,notif_group_id);
ALTER TABLE cbp_tkt_artefact_rel
	ADD CONSTRAINT  XPKcbp_tkt_artefact_rel PRIMARY KEY (tkt_id,artefact_id,tkt_system_res_id);
ALTER TABLE cbp_tkt_artefact_type
	ADD CONSTRAINT  XPKcbp_tkt_artefact_type PRIMARY KEY (artefact_type_id);
ALTER TABLE cbp_tkt_asset_type
	ADD CONSTRAINT  XPKcbp_tkt_asset_type PRIMARY KEY (asset_type_id);
ALTER TABLE cbp_tkt_call_type
	ADD CONSTRAINT  XPKcbp_tkt_call_type PRIMARY KEY (call_type);
ALTER TABLE cbp_tkt_cmd_prop
	ADD CONSTRAINT  XPKcbp_tkt_cmd_prop PRIMARY KEY (form_prop_id,cmd_type_id);
ALTER TABLE cbp_tkt_cmd_type
	ADD CONSTRAINT  XPKcbp_tkt_cmd_type PRIMARY KEY (cmd_type_id);
ALTER TABLE cbp_tkt_code_tag
	ADD CONSTRAINT  XPKcbp_tkt_code_tag PRIMARY KEY (code_tag_id);
ALTER TABLE cbp_tkt_code_tag_rel
	ADD CONSTRAINT  XPKcbp_tkt_code_tag_rel PRIMARY KEY (tkt_id,code_tag_id,tkt_system_res_id);
ALTER TABLE cbp_tkt_code_type
	ADD CONSTRAINT  XPKcbp_tkt_code_type PRIMARY KEY (code_type_id);
ALTER TABLE cbp_tkt_form_prop
	ADD CONSTRAINT  XPKcbp_tkt_form_prop PRIMARY KEY (form_prop_id);
ALTER TABLE cbp_tkt_job_parameter
	ADD CONSTRAINT  XPKcbp_tkt_job_parameter PRIMARY KEY (job_parameter_id);
ALTER TABLE cbp_tkt_job_type
	ADD CONSTRAINT  XPKcbp_tkt_job_type PRIMARY KEY (job_type_id);
ALTER TABLE cbp_tkt_master_status
	ADD CONSTRAINT  XPKcbp_tkt_master_status PRIMARY KEY (master_status_id);
ALTER TABLE cbp_tkt_master_subject_area
	ADD CONSTRAINT  XPKcbp_tkt_master_subject_area PRIMARY KEY (msa_id);
ALTER TABLE cbp_tkt_misc_config
	ADD CONSTRAINT  XPKcbp_tkt_misc_config PRIMARY KEY (misc_config_id);
ALTER TABLE cbp_tkt_misc_config_type
	ADD CONSTRAINT  XPKcbp_tkt_misc_config_type PRIMARY KEY (misc_config_type_id);
ALTER TABLE cbp_tkt_node_prop_xform
	ADD CONSTRAINT  XPKcbp_tkt_node_prop_xform PRIMARY KEY (node_name,artefact_type_id,property_name,env_type_id);
ALTER TABLE cbp_tkt_notif_group
	ADD CONSTRAINT  XPKcbp_tkt_notif_group PRIMARY KEY (notif_group_id);
ALTER TABLE cbp_tkt_notif_group_member
	ADD CONSTRAINT  XPKcbp_tkt_notif_group_member PRIMARY KEY (notif_group_id,cbp_user_id);
ALTER TABLE cbp_tkt_op_type
	ADD CONSTRAINT  XPKcbp_tkt_op_type PRIMARY KEY (op_type_id);
ALTER TABLE cbp_tkt_policy
	ADD CONSTRAINT  XPKcbp_tkt_policy PRIMARY KEY (policy_id);
ALTER TABLE cbp_tkt_policy_category
	ADD CONSTRAINT  XPKcbp_tkt_policy_category PRIMARY KEY (policy_category_type_id);
ALTER TABLE cbp_tkt_priority
	ADD CONSTRAINT  XPKcbp_tkt_priority PRIMARY KEY (priority_type_id);
ALTER TABLE cbp_tkt_progress_status
	ADD CONSTRAINT  XPKcbp_tkt_progress_status PRIMARY KEY (id);
ALTER TABLE cbp_tkt_promo_plan
	ADD CONSTRAINT  XPKcbp_tkt_promo_plan PRIMARY KEY (tkt_id,artefact_id,target_res_id,tkt_system_res_id);
ALTER TABLE cbp_tkt_property
	ADD CONSTRAINT  XPKCBP_TKT_PROPERTY PRIMARY KEY (property_id,property_group_id);
ALTER TABLE cbp_tkt_property_group
	ADD CONSTRAINT  XPKCBP_TKT_PROPERTY_GROUP PRIMARY KEY (property_group_id);
ALTER TABLE cbp_tkt_prx_object_type
	ADD CONSTRAINT  XPKcbp_tkt_prx_object_type PRIMARY KEY (prx_object_type_id);
ALTER TABLE cbp_tkt_rel_tag_env
	ADD CONSTRAINT  XPKcbp_tkt_rel_tag_env PRIMARY KEY (release_tag_id,source_env_type_id,target_env_type_id,sub_res_id);
ALTER TABLE cbp_tkt_rel_tag_type
	ADD CONSTRAINT  XPKcbp_tkt_rel_tag_type PRIMARY KEY (rel_tag_type_id);
ALTER TABLE cbp_tkt_release_tag
	ADD CONSTRAINT  XPKcbp_tkt_release_tag PRIMARY KEY (release_tag_id);
ALTER TABLE cbp_tkt_res
	ADD CONSTRAINT  XPKcbp_tkt_res PRIMARY KEY (res_id);
ALTER TABLE cbp_tkt_res_cred
	ADD CONSTRAINT  XPKcbp_tkt_res_cred PRIMARY KEY (res_key,res_id);
ALTER TABLE cbp_tkt_res_misc_config
	ADD CONSTRAINT  XPKcbp_tkt_res_misc_config PRIMARY KEY (res_id,misc_config_id);
ALTER TABLE cbp_tkt_res_type
	ADD CONSTRAINT  XPKcbp_tkt_res_type PRIMARY KEY (res_type_id);
ALTER TABLE cbp_tkt_res_type_form
	ADD CONSTRAINT  XPKcbp_tkt_res_type_form PRIMARY KEY (res_type_id,form_prop_id);
ALTER TABLE cbp_tkt_res_type_object
	ADD CONSTRAINT  XPKcbp_tkt_res_type_object PRIMARY KEY (object_type_id);
ALTER TABLE cbp_tkt_res_type_supp_op
	ADD CONSTRAINT  XPKcbp_tkt_res_type_supp_op PRIMARY KEY (op_type_id,res_type_id);
ALTER TABLE cbp_tkt_role
	ADD CONSTRAINT  XPKcbp_tkt_role PRIMARY KEY (role_id);
ALTER TABLE cbp_tkt_role_sub_op_type
	ADD CONSTRAINT  XPKcbp_tkt_role_sub_op_type PRIMARY KEY (role_id,sub_op_type_id);
ALTER TABLE cbp_tkt_sched
	ADD CONSTRAINT  XPKcbp_tkt_sched PRIMARY KEY (schedule_id);
ALTER TABLE cbp_tkt_sched_job_param_rel
	ADD CONSTRAINT  XPKcbp_tkt_sched_job_param_rel PRIMARY KEY (schedule_id,job_type_id);
ALTER TABLE cbp_tkt_status_type
	ADD CONSTRAINT  XPKcbp_tkt_status_type PRIMARY KEY (tkt_status_type_id);
ALTER TABLE cbp_tkt_sub_op_type
	ADD CONSTRAINT  XPKcbp_tkt_sub_op_type PRIMARY KEY (sub_op_type_id);
ALTER TABLE cbp_tkt_tag_used_obj_op_type
	ADD CONSTRAINT  XPKcbp_tkt_tag_used_obj_op_typ PRIMARY KEY (op_type_id,tkt_id,code_tag_id,res_id,tkt_system_res_id,object_type_id,object_name,sub_op_type_id);
ALTER TABLE cbp_tkt_user_app_rel_priv
	ADD CONSTRAINT  XPKcbp_tkt_user_app_rel_priv PRIMARY KEY (cbp_user_id,cbp_project_id,release_tag_id);
ALTER TABLE cbp_tkt_user_role
	ADD CONSTRAINT  XPKcbp_tkt_user_role PRIMARY KEY (cbp_user_id,role_id);
	
-- Referential Keys
ALTER TABLE cbp_act_tag
	ADD (CONSTRAINT  R352 FOREIGN KEY (code_object_id) REFERENCES cbp_code_object(code_object_id));
ALTER TABLE cbp_batch_group
	ADD (CONSTRAINT  R129 FOREIGN KEY (cbp_user_id) REFERENCES cbp_user_security(cbp_user_id));
ALTER TABLE cbp_batch_group
	ADD (CONSTRAINT  R591 FOREIGN KEY (notif_group_id) REFERENCES cbp_notif_group(notif_group_id));
ALTER TABLE cbp_batch_group_run_detail
	ADD (CONSTRAINT  R065 FOREIGN KEY (batch_group_id) REFERENCES cbp_batch_group(batch_group_id));
ALTER TABLE cbp_batch_group_run_detail
	ADD (CONSTRAINT  R093 FOREIGN KEY (cbp_user_id) REFERENCES cbp_user_security(cbp_user_id));
ALTER TABLE cbp_batch_group_run_detail
	ADD (CONSTRAINT  R127 FOREIGN KEY (cbp_metrics_report_id) REFERENCES cbp_metrics_report(cbp_metrics_report_id));
ALTER TABLE cbp_batch_group_run_detail
	ADD (CONSTRAINT  R394 FOREIGN KEY (master_status_id) REFERENCES cbp_master_status(master_status_id));
ALTER TABLE cbp_cmd_config
	ADD (CONSTRAINT  R2094 FOREIGN KEY (cmd_type_id) REFERENCES cbp_cmd_type(cmd_type_id));
ALTER TABLE cbp_code_object
	ADD (CONSTRAINT  R343 FOREIGN KEY (cbp_project_id) REFERENCES cbp_project(cbp_project_id));
ALTER TABLE cbp_code_object
	ADD (CONSTRAINT  R345 FOREIGN KEY (prx_object_type_id) REFERENCES cbp_prx_object_type(prx_object_type_id));
ALTER TABLE cbp_code_object
	ADD (CONSTRAINT  R678 FOREIGN KEY (cbp_repository_id,cbp_ds_project_id,cbp_folder_id,cbp_folder_id_v) REFERENCES cbp_folder(cbp_repository_id,cbp_ds_project_id,cbp_folder_id,cbp_folder_id_v));
ALTER TABLE cbp_db_connection
	ADD (CONSTRAINT  R227 FOREIGN KEY (cbp_env_type_id) REFERENCES cbp_env_type(cbp_env_type_id));
ALTER TABLE cbp_db_connection
	ADD (CONSTRAINT  R238 FOREIGN KEY (cbp_repository_id) REFERENCES cbp_repository(cbp_repository_id));
/*
ALTER TABLE cbp_db_connection
	ADD (CONSTRAINT  cbp_db_connection_FK01 FOREIGN KEY (nr_db_type_id) REFERENCES cbp_nr_db_type(nr_db_type_id));
*/
ALTER TABLE cbp_ds_project
	ADD (CONSTRAINT  R592 FOREIGN KEY (cbp_repository_id) REFERENCES cbp_repository(cbp_repository_id));
ALTER TABLE cbp_folder
	ADD (CONSTRAINT  R016 FOREIGN KEY (cbp_repository_id) REFERENCES cbp_repository(cbp_repository_id));
ALTER TABLE cbp_folder
	ADD (CONSTRAINT  R545 FOREIGN KEY (cbp_repository_id,cbp_ds_project_id) REFERENCES cbp_ds_project(cbp_repository_id,cbp_ds_project_id));
ALTER TABLE cbp_job_parameter
	ADD (CONSTRAINT  R675 FOREIGN KEY (job_type_id) REFERENCES cbp_job_type(job_type_id));
ALTER TABLE cbp_legacy_code_manual
	ADD (CONSTRAINT  R600 FOREIGN KEY (cbp_project_id) REFERENCES cbp_project(cbp_project_id));
ALTER TABLE cbp_legacy_code_manual
	ADD (CONSTRAINT  R602 FOREIGN KEY (cbp_user_id) REFERENCES cbp_user_security(cbp_user_id));
ALTER TABLE cbp_legacy_code_manual
	ADD (CONSTRAINT  R603 FOREIGN KEY (prx_object_type_id) REFERENCES cbp_prx_object_type(prx_object_type_id));
ALTER TABLE cbp_legacy_code_manual
	ADD (CONSTRAINT  R601 FOREIGN KEY (cbp_repository_id,cbp_ds_project_id,cbp_folder_id,cbp_folder_id_v) REFERENCES cbp_folder(cbp_repository_id,cbp_ds_project_id,cbp_folder_id,cbp_folder_id_v));
ALTER TABLE cbp_master_status
	ADD (CONSTRAINT  R392 FOREIGN KEY (msa_id) REFERENCES cbp_master_subject_area(msa_id));
ALTER TABLE cbp_metrics_report
	ADD (CONSTRAINT  R114 FOREIGN KEY (cbp_user_id) REFERENCES cbp_user_security(cbp_user_id));
ALTER TABLE cbp_metrics_report_detail
	ADD (CONSTRAINT  R103 FOREIGN KEY (cbp_project_id) REFERENCES cbp_project(cbp_project_id));
ALTER TABLE cbp_metrics_report_detail
	ADD (CONSTRAINT  R104 FOREIGN KEY (cbp_repository_id) REFERENCES cbp_repository(cbp_repository_id));
ALTER TABLE cbp_metrics_report_detail
	ADD (CONSTRAINT  R106 FOREIGN KEY (cbp_rule_id) REFERENCES cbp_rule(cbp_rule_id));
ALTER TABLE cbp_metrics_report_detail
	ADD (CONSTRAINT  R112 FOREIGN KEY (cbp_metrics_report_id) REFERENCES cbp_metrics_report(cbp_metrics_report_id));
ALTER TABLE cbp_metrics_report_detail
	ADD (CONSTRAINT  R105 FOREIGN KEY (cbp_repository_id,cbp_ds_project_id,cbp_folder_id,cbp_folder_id_v) REFERENCES cbp_folder(cbp_repository_id,cbp_ds_project_id,cbp_folder_id,cbp_folder_id_v));
ALTER TABLE cbp_misc_project_property
	ADD (CONSTRAINT  R160 FOREIGN KEY (cbp_project_id) REFERENCES cbp_project(cbp_project_id));
ALTER TABLE cbp_misc_project_property
	ADD (CONSTRAINT  R162 FOREIGN KEY (cbp_misc_property_id,cbp_property_group_id) REFERENCES cbp_misc_property(cbp_misc_property_id,cbp_property_group_id));
ALTER TABLE cbp_misc_property
	ADD (CONSTRAINT  R161 FOREIGN KEY (cbp_property_group_id) REFERENCES cbp_property_group(cbp_property_group_id));
ALTER TABLE cbp_notif_group
	ADD (CONSTRAINT  R584 FOREIGN KEY (notif_group_owner) REFERENCES cbp_user_security(cbp_user_id));
ALTER TABLE cbp_notif_group_member
	ADD (CONSTRAINT  R582 FOREIGN KEY (notif_group_id) REFERENCES cbp_notif_group(notif_group_id));
ALTER TABLE cbp_notif_group_member
	ADD (CONSTRAINT  R583 FOREIGN KEY (cbp_user_id) REFERENCES cbp_user_security(cbp_user_id));
ALTER TABLE cbp_notif_group_signal
	ADD (CONSTRAINT  R585 FOREIGN KEY (notif_group_id) REFERENCES cbp_notif_group(notif_group_id));
ALTER TABLE cbp_notif_group_signal
	ADD (CONSTRAINT  R586 FOREIGN KEY (signal_id,signal_type_id) REFERENCES cbp_signal(signal_id,signal_type_id));
ALTER TABLE cbp_object_signal_audit
	ADD (CONSTRAINT  R439 FOREIGN KEY (act_tag_id) REFERENCES cbp_act_tag(act_tag_id));
ALTER TABLE cbp_object_signal_audit
	ADD (CONSTRAINT  R441 FOREIGN KEY (signal_id,signal_type_id) REFERENCES cbp_signal(signal_id,signal_type_id));
ALTER TABLE cbp_object_signal_audit
	ADD (CONSTRAINT  R442 FOREIGN KEY (cbp_user_id) REFERENCES cbp_user_security(cbp_user_id));
ALTER TABLE cbp_object_signal_audit
	ADD (CONSTRAINT  R477 FOREIGN KEY (signal_key_type_id_1) REFERENCES cbp_signal_key_type(signal_key_type_id));
ALTER TABLE cbp_object_signal_audit
	ADD (CONSTRAINT  R478 FOREIGN KEY (signal_key_type_id_2) REFERENCES cbp_signal_key_type(signal_key_type_id));
ALTER TABLE cbp_object_signal_audit
	ADD (CONSTRAINT  R479 FOREIGN KEY (signal_key_type_id_3) REFERENCES cbp_signal_key_type(signal_key_type_id));
ALTER TABLE cbp_object_signal_audit
	ADD (CONSTRAINT  R480 FOREIGN KEY (signal_key_type_id_4) REFERENCES cbp_signal_key_type(signal_key_type_id));
ALTER TABLE cbp_parameter
	ADD (CONSTRAINT  R010 FOREIGN KEY (cbp_pattern_id) REFERENCES cbp_pattern(cbp_pattern_id));
ALTER TABLE cbp_project_crit_pre_app
	ADD (CONSTRAINT  R651 FOREIGN KEY (cbp_project_id) REFERENCES cbp_project(cbp_project_id));
ALTER TABLE cbp_project_crit_pre_app
	ADD (CONSTRAINT  R652 FOREIGN KEY (cbp_criticality_level_id) REFERENCES cbp_criticality_level(cbp_criticality_level_id));
ALTER TABLE cbp_project_folder
	ADD (CONSTRAINT  R396 FOREIGN KEY (cbp_project_id) REFERENCES cbp_project(cbp_project_id));
ALTER TABLE cbp_project_folder
	ADD (CONSTRAINT  R397 FOREIGN KEY (cbp_repository_id,cbp_ds_project_id,cbp_folder_id,cbp_folder_id_v) REFERENCES cbp_folder(cbp_repository_id,cbp_ds_project_id,cbp_folder_id,cbp_folder_id_v));
ALTER TABLE cbp_project_parameter
	ADD (CONSTRAINT  R013 FOREIGN KEY (cbp_project_id) REFERENCES cbp_project(cbp_project_id));
ALTER TABLE cbp_project_parameter
	ADD (CONSTRAINT  R014 FOREIGN KEY (cbp_parameter_id) REFERENCES cbp_parameter(cbp_parameter_id));
ALTER TABLE cbp_project_repository
	ADD (CONSTRAINT  R017 FOREIGN KEY (cbp_repository_id) REFERENCES cbp_repository(cbp_repository_id));
ALTER TABLE cbp_project_repository
	ADD (CONSTRAINT  R011 FOREIGN KEY (cbp_project_id) REFERENCES cbp_project(cbp_project_id));
ALTER TABLE cbp_project_rule_category
	ADD (CONSTRAINT  R375 FOREIGN KEY (cbp_project_id) REFERENCES cbp_project(cbp_project_id));
ALTER TABLE cbp_project_rule_category
	ADD (CONSTRAINT  R376 FOREIGN KEY (cbp_rule_id) REFERENCES cbp_rule(cbp_rule_id));
ALTER TABLE cbp_project_rule_category
	ADD (CONSTRAINT  R377 FOREIGN KEY (cbp_category_id) REFERENCES cbp_category(cbp_category_id));
ALTER TABLE cbp_project_rule_criticality
	ADD (CONSTRAINT  R378 FOREIGN KEY (cbp_project_id) REFERENCES cbp_project(cbp_project_id));
ALTER TABLE cbp_project_rule_criticality
	ADD (CONSTRAINT  R379 FOREIGN KEY (cbp_rule_id) REFERENCES cbp_rule(cbp_rule_id));
ALTER TABLE cbp_project_rule_criticality
	ADD (CONSTRAINT  R380 FOREIGN KEY (cbp_criticality_level_id) REFERENCES cbp_criticality_level(cbp_criticality_level_id));
ALTER TABLE cbp_project_rule_list
	ADD (CONSTRAINT  R012 FOREIGN KEY (cbp_project_id) REFERENCES cbp_project(cbp_project_id));
ALTER TABLE cbp_prx_object_type
	ADD (CONSTRAINT  R328 FOREIGN KEY (cbp_code_type_id) REFERENCES cbp_code_type(cbp_code_type_id));
ALTER TABLE cbp_repo_pair
	ADD (CONSTRAINT  R2098 FOREIGN KEY (cbp_repository_id_from) REFERENCES cbp_repository(cbp_repository_id));
ALTER TABLE cbp_repo_pair
	ADD (CONSTRAINT  R2102 FOREIGN KEY (cbp_repository_id_to) REFERENCES cbp_repository(cbp_repository_id));
ALTER TABLE cbp_repository
	ADD (CONSTRAINT  R006 FOREIGN KEY (cbp_db_type_id) REFERENCES cbp_db_type(cbp_db_type_id));
ALTER TABLE cbp_repository
	ADD (CONSTRAINT  R018 FOREIGN KEY (cbp_repository_type_id) REFERENCES cbp_repository_type(cbp_repository_type_id));
ALTER TABLE cbp_repository
	ADD (CONSTRAINT  R539 FOREIGN KEY (cbp_env_type_id) REFERENCES cbp_env_type(cbp_env_type_id));
ALTER TABLE cbp_repository
	ADD (CONSTRAINT  R2106 FOREIGN KEY (cmd_config_id) REFERENCES cbp_cmd_config(cmd_config_id));
ALTER TABLE cbp_repository
	ADD (CONSTRAINT  R2100 FOREIGN KEY (cbp_code_type_id) REFERENCES cbp_code_type(cbp_code_type_id));	
ALTER TABLE cbp_repository_type
	ADD (CONSTRAINT  R003 FOREIGN KEY (cbp_code_type_id) REFERENCES cbp_code_type(cbp_code_type_id));
ALTER TABLE cbp_rev_history_det
	ADD (CONSTRAINT  R650 FOREIGN KEY (cbp_rule_id) REFERENCES cbp_rule(cbp_rule_id));
ALTER TABLE cbp_rev_history_sum
	ADD (CONSTRAINT  R646 FOREIGN KEY (act_tag_id) REFERENCES cbp_act_tag(act_tag_id));
ALTER TABLE cbp_rev_history_sum
	ADD (CONSTRAINT  R647 FOREIGN KEY (authored_by) REFERENCES cbp_user_security(cbp_user_id));
ALTER TABLE cbp_rev_history_sum
	ADD (CONSTRAINT  R648 FOREIGN KEY (reviewed_by) REFERENCES cbp_user_security(cbp_user_id));
ALTER TABLE cbp_rule
	ADD (CONSTRAINT  R004 FOREIGN KEY (cbp_code_type_id) REFERENCES cbp_code_type(cbp_code_type_id));
ALTER TABLE cbp_rule
	ADD (CONSTRAINT  R028 FOREIGN KEY (cbp_imp_type_id) REFERENCES cbp_rule_imp_type(cbp_imp_type_id));
ALTER TABLE cbp_rule_category
	ADD (CONSTRAINT  R001 FOREIGN KEY (cbp_category_id) REFERENCES cbp_category(cbp_category_id));
ALTER TABLE cbp_rule_commentary
	ADD (CONSTRAINT  R446 FOREIGN KEY (cbp_rule_id) REFERENCES cbp_rule(cbp_rule_id));
ALTER TABLE cbp_rule_criticality
	ADD (CONSTRAINT  R021 FOREIGN KEY (cbp_rule_id) REFERENCES cbp_rule(cbp_rule_id));
ALTER TABLE cbp_rule_criticality
	ADD (CONSTRAINT  R005 FOREIGN KEY (cbp_criticality_level_id) REFERENCES cbp_criticality_level(cbp_criticality_level_id));
ALTER TABLE cbp_rule_list
	ADD (CONSTRAINT  R024 FOREIGN KEY (cbp_rule_id) REFERENCES cbp_rule(cbp_rule_id));
ALTER TABLE cbp_rule_list
	ADD (CONSTRAINT  R002 FOREIGN KEY (cbp_code_type_id) REFERENCES cbp_code_type(cbp_code_type_id));
ALTER TABLE cbp_rule_parameter
	ADD (CONSTRAINT  R027 FOREIGN KEY (cbp_rule_id) REFERENCES cbp_rule(cbp_rule_id));
ALTER TABLE cbp_rule_parameter
	ADD (CONSTRAINT  R009 FOREIGN KEY (cbp_parameter_id) REFERENCES cbp_parameter(cbp_parameter_id));
ALTER TABLE cbp_rule_q_mapper
	ADD (CONSTRAINT  R008 FOREIGN KEY (cbp_db_type_id) REFERENCES cbp_db_type(cbp_db_type_id));
ALTER TABLE cbp_rule_q_mapper
	ADD (CONSTRAINT  R019 FOREIGN KEY (cbp_repository_type_id) REFERENCES cbp_repository_type(cbp_repository_type_id));
ALTER TABLE cbp_rule_q_mapper
	ADD (CONSTRAINT  R025 FOREIGN KEY (cbp_rule_id) REFERENCES cbp_rule(cbp_rule_id));
ALTER TABLE cbp_sched
	ADD (CONSTRAINT  R667 FOREIGN KEY (created_by_user) REFERENCES cbp_user_security(cbp_user_id));
ALTER TABLE cbp_sched
	ADD (CONSTRAINT  R668 FOREIGN KEY (schedule_status_id) REFERENCES cbp_master_status(master_status_id));
ALTER TABLE cbp_sched_job_type_param_rel
	ADD (CONSTRAINT  R671 FOREIGN KEY (job_type_id) REFERENCES cbp_job_type(job_type_id));
ALTER TABLE cbp_sched_job_type_param_rel
	ADD (CONSTRAINT  R672 FOREIGN KEY (job_parameter_id) REFERENCES cbp_job_parameter(job_parameter_id));
ALTER TABLE cbp_sched_job_type_param_rel
	ADD (CONSTRAINT  R674 FOREIGN KEY (schedule_id) REFERENCES cbp_sched(schedule_id));
ALTER TABLE cbp_selection
	ADD (CONSTRAINT  R066 FOREIGN KEY (selection_type_id) REFERENCES cbp_selection_type(selection_type_id));
ALTER TABLE cbp_selection
	ADD (CONSTRAINT  R068 FOREIGN KEY (cbp_project_id) REFERENCES cbp_project(cbp_project_id));
ALTER TABLE cbp_selection
	ADD (CONSTRAINT  R130 FOREIGN KEY (batch_group_id) REFERENCES cbp_batch_group(batch_group_id));
ALTER TABLE cbp_selection
	ADD (CONSTRAINT  R143 FOREIGN KEY (cbp_repository_id) REFERENCES cbp_repository(cbp_repository_id));
ALTER TABLE cbp_selection
	ADD (CONSTRAINT  R391 FOREIGN KEY (bobject_type_id) REFERENCES cbp_bobject_type(bobject_type_id));
ALTER TABLE cbp_selection
	ADD (CONSTRAINT  R596 FOREIGN KEY (cbp_repository_id,cbp_ds_project_id) REFERENCES cbp_ds_project(cbp_repository_id,cbp_ds_project_id));
ALTER TABLE cbp_signal
	ADD (CONSTRAINT  R410 FOREIGN KEY (prx_object_type_id) REFERENCES cbp_prx_object_type(prx_object_type_id));
ALTER TABLE cbp_signal
	ADD (CONSTRAINT  R445 FOREIGN KEY (signal_type_id) REFERENCES cbp_signal_type(signal_type_id));
ALTER TABLE cbp_signal
	ADD (CONSTRAINT  R530 FOREIGN KEY (updated_by_user_id) REFERENCES cbp_user_security(cbp_user_id));
ALTER TABLE cbp_signal_type
	ADD (CONSTRAINT  R458 FOREIGN KEY (msa_id) REFERENCES cbp_master_subject_area(msa_id));
ALTER TABLE cbp_signal_type
	ADD (CONSTRAINT  R531 FOREIGN KEY (updated_by_user_id) REFERENCES cbp_user_security(cbp_user_id));
ALTER TABLE cbp_team_ds_project
	ADD (CONSTRAINT  R2002 FOREIGN KEY (team_id) REFERENCES cbp_team(team_id));
ALTER TABLE cbp_team_ds_project
	ADD (CONSTRAINT  R2003 FOREIGN KEY (cbp_repository_id,cbp_ds_project_id) REFERENCES cbp_ds_project(cbp_repository_id,cbp_ds_project_id));
ALTER TABLE cbp_team_user
	ADD (CONSTRAINT  R2000 FOREIGN KEY (team_id) REFERENCES cbp_team(team_id));
ALTER TABLE cbp_team_user
	ADD (CONSTRAINT  R2001 FOREIGN KEY (cbp_user_id) REFERENCES cbp_user_security(cbp_user_id));
ALTER TABLE cbp_user_project
	ADD (CONSTRAINT  R015 FOREIGN KEY (cbp_project_id) REFERENCES cbp_project(cbp_project_id));
ALTER TABLE cbp_user_project
	ADD (CONSTRAINT  R029 FOREIGN KEY (cbp_user_id) REFERENCES cbp_user_security(cbp_user_id));
ALTER TABLE cbp_user_report_share
	ADD (CONSTRAINT  R325 FOREIGN KEY (cbp_user_id) REFERENCES cbp_user_security(cbp_user_id));
ALTER TABLE cbp_user_report_share
	ADD (CONSTRAINT  R326 FOREIGN KEY (cbp_metrics_report_id) REFERENCES cbp_metrics_report(cbp_metrics_report_id));
ALTER TABLE cbp_user_rule_list
	ADD (CONSTRAINT  R030 FOREIGN KEY (cbp_user_id) REFERENCES cbp_user_security(cbp_user_id));
ALTER TABLE cbp_user_selection_choice
	ADD (CONSTRAINT  R183 FOREIGN KEY (cbp_user_id) REFERENCES cbp_user_security(cbp_user_id));
ALTER TABLE cbp_waiver
	ADD (CONSTRAINT  R077 FOREIGN KEY (cbp_project_id) REFERENCES cbp_project(cbp_project_id));
ALTER TABLE cbp_waiver
	ADD (CONSTRAINT  R078 FOREIGN KEY (cbp_repository_id) REFERENCES cbp_repository(cbp_repository_id));
ALTER TABLE cbp_waiver
	ADD (CONSTRAINT  R085 FOREIGN KEY (cbp_created_by_user_id) REFERENCES cbp_user_security(cbp_user_id));
ALTER TABLE cbp_waiver
	ADD (CONSTRAINT  R147 FOREIGN KEY (cbp_updated_by_user_id) REFERENCES cbp_user_security(cbp_user_id));
ALTER TABLE cbp_waiver
	ADD (CONSTRAINT  R664 FOREIGN KEY (waiver_type_id) REFERENCES cbp_waiver_type(waiver_type_id));
ALTER TABLE cbp_waiver
	ADD (CONSTRAINT  R079 FOREIGN KEY (cbp_repository_id,cbp_ds_project_id,cbp_folder_id,cbp_folder_id_v) REFERENCES cbp_folder(cbp_repository_id,cbp_ds_project_id,cbp_folder_id,cbp_folder_id_v));
ALTER TABLE cbp_xplan_dba_comment
	ADD (CONSTRAINT  R464 FOREIGN KEY (act_tag_id) REFERENCES cbp_act_tag(act_tag_id));
ALTER TABLE cbp_xplan_dba_comment
	ADD (CONSTRAINT  R465 FOREIGN KEY (act_tag_trans_id) REFERENCES cbp_act_tag_trans(act_tag_trans_id));
ALTER TABLE cbp_xplan_dba_comment
	ADD (CONSTRAINT  R467 FOREIGN KEY (cbp_connection_id) REFERENCES cbp_db_connection(cbp_connection_id));
ALTER TABLE cbp_adf_object_map
	ADD (CONSTRAINT  R_12 FOREIGN KEY (cbp_repository_id) REFERENCES cbp_repository(cbp_repository_id));	
ALTER TABLE cbp_exit_entry_crit
	ADD (CONSTRAINT  R2180 FOREIGN KEY (cbp_criticality_level_id) REFERENCES cbp_criticality_level(cbp_criticality_level_id));
ALTER TABLE cbp_exit_entry_crit
	ADD (CONSTRAINT  R2182 FOREIGN KEY (last_modified_by_user_id) REFERENCES cbp_user_security(cbp_user_id));
ALTER TABLE cbp_exit_entry_crit
	ADD (CONSTRAINT  R2181 FOREIGN KEY (cbp_env_type_id) REFERENCES cbp_env_type(cbp_env_type_id));
ALTER TABLE cbp_user_proj_rel_branch
	ADD ( FOREIGN KEY (cbp_user_id) REFERENCES cbp_user_security(cbp_user_id));
ALTER TABLE cbp_user_proj_rel_branch
	ADD ( FOREIGN KEY (cbp_project_id) REFERENCES cbp_project(cbp_project_id));	

ALTER TABLE cbp_tkt
	ADD (CONSTRAINT  R2 FOREIGN KEY (tkt_status_type_id) REFERENCES cbp_tkt_status_type(tkt_status_type_id));
ALTER TABLE cbp_tkt
	ADD (CONSTRAINT  R94 FOREIGN KEY (cbp_user_id) REFERENCES cbp_user_security(cbp_user_id));
ALTER TABLE cbp_tkt
	ADD (CONSTRAINT  R177 FOREIGN KEY (tkt_system_res_id) REFERENCES cbp_tkt_res(res_id));
ALTER TABLE cbp_tkt
	ADD (CONSTRAINT  R277 FOREIGN KEY (priority_type_id) REFERENCES cbp_tkt_priority(priority_type_id));
ALTER TABLE cbp_tkt
	ADD (CONSTRAINT  R278 FOREIGN KEY (approver_id) REFERENCES cbp_user_security(cbp_user_id));
ALTER TABLE cbp_tkt
	ADD (CONSTRAINT  R279 FOREIGN KEY (requester_id) REFERENCES cbp_user_security(cbp_user_id));
ALTER TABLE cbp_tkt
	ADD (CONSTRAINT  R282 FOREIGN KEY (tkt_permission_status_id) REFERENCES cbp_tkt_status_type(tkt_status_type_id));
ALTER TABLE cbp_tkt_app_env
	ADD (CONSTRAINT  R204 FOREIGN KEY (cbp_project_id) REFERENCES cbp_project(cbp_project_id));
ALTER TABLE cbp_tkt_app_env
	ADD (CONSTRAINT  R205 FOREIGN KEY (env_type_id) REFERENCES cbp_env_type(cbp_env_type_id));
ALTER TABLE cbp_tkt_app_env_promo
	ADD (CONSTRAINT  R46 FOREIGN KEY (cbp_project_id) REFERENCES cbp_project(cbp_project_id));
ALTER TABLE cbp_tkt_app_env_promo
	ADD (CONSTRAINT  R47 FOREIGN KEY (env_type_id) REFERENCES cbp_env_type(cbp_env_type_id));
ALTER TABLE cbp_tkt_app_env_res
	ADD (CONSTRAINT  R3 FOREIGN KEY (res_id) REFERENCES cbp_tkt_res(res_id));
ALTER TABLE cbp_tkt_app_env_res
	ADD (CONSTRAINT  R4 FOREIGN KEY (env_type_id) REFERENCES cbp_env_type(cbp_env_type_id));
ALTER TABLE cbp_tkt_app_env_res
	ADD (CONSTRAINT  R179 FOREIGN KEY (cbp_project_id) REFERENCES cbp_project(cbp_project_id));
ALTER TABLE cbp_tkt_app_landscape
	ADD (CONSTRAINT  R8 FOREIGN KEY (source_env_type_id) REFERENCES cbp_env_type(cbp_env_type_id));
ALTER TABLE cbp_tkt_app_landscape
	ADD (CONSTRAINT  R9 FOREIGN KEY (target_env_type_id) REFERENCES cbp_env_type(cbp_env_type_id));
ALTER TABLE cbp_tkt_app_landscape
	ADD (CONSTRAINT  R13 FOREIGN KEY (cbp_project_id) REFERENCES cbp_project(cbp_project_id));
ALTER TABLE cbp_tkt_app_landscape
	ADD (CONSTRAINT  R21 FOREIGN KEY (source_res_id) REFERENCES cbp_tkt_res(res_id));
ALTER TABLE cbp_tkt_app_landscape
	ADD (CONSTRAINT  R22 FOREIGN KEY (target_res_id) REFERENCES cbp_tkt_res(res_id));
ALTER TABLE cbp_tkt_app_misc_config
	ADD (CONSTRAINT  R219 FOREIGN KEY (cbp_project_id) REFERENCES cbp_project(cbp_project_id));
ALTER TABLE cbp_tkt_app_misc_config
	ADD (CONSTRAINT  R220 FOREIGN KEY (misc_config_id) REFERENCES cbp_tkt_misc_config(misc_config_id));
ALTER TABLE cbp_tkt_app_release_tag
	ADD (CONSTRAINT  R206 FOREIGN KEY (cbp_project_id) REFERENCES cbp_project(cbp_project_id));
ALTER TABLE cbp_tkt_app_release_tag
	ADD (CONSTRAINT  R211 FOREIGN KEY (modified_by) REFERENCES cbp_user_security(cbp_user_id));
ALTER TABLE cbp_tkt_app_release_tag
	ADD (CONSTRAINT  R214 FOREIGN KEY (release_tag_id) REFERENCES cbp_tkt_release_tag(release_tag_id));
ALTER TABLE cbp_tkt_app_user
	ADD (CONSTRAINT  R188 FOREIGN KEY (cbp_project_id) REFERENCES cbp_project(cbp_project_id));
ALTER TABLE cbp_tkt_app_user
	ADD (CONSTRAINT  R189 FOREIGN KEY (cbp_user_id) REFERENCES cbp_user_security(cbp_user_id));
ALTER TABLE cbp_tkt_app_user_role
	ADD (CONSTRAINT  R259 FOREIGN KEY (cbp_project_id) REFERENCES cbp_project(cbp_project_id));
ALTER TABLE cbp_tkt_app_user_role
	ADD (CONSTRAINT  R260 FOREIGN KEY (cbp_user_id) REFERENCES cbp_user_security(cbp_user_id));
ALTER TABLE cbp_tkt_app_user_role
	ADD (CONSTRAINT  R261 FOREIGN KEY (role_id) REFERENCES cbp_tkt_role(role_id));
ALTER TABLE cbp_tkt_arte_node_prop
	ADD (CONSTRAINT  R285 FOREIGN KEY (artefact_type_id) REFERENCES cbp_tkt_artefact_type(artefact_type_id));
ALTER TABLE cbp_tkt_artefact
	ADD (CONSTRAINT  R5 FOREIGN KEY (artefact_type_id) REFERENCES cbp_tkt_artefact_type(artefact_type_id));
ALTER TABLE cbp_tkt_artefact
	ADD (CONSTRAINT  R109 FOREIGN KEY (artefact_f_r_type_id) REFERENCES cbp_tkt_artefact_f_r_type(artefact_f_r_type_id));
ALTER TABLE cbp_tkt_artefact
	ADD (CONSTRAINT  R125 FOREIGN KEY (vcs_res_id) REFERENCES cbp_tkt_res(res_id));
ALTER TABLE cbp_tkt_artefact_f_r_tracker
	ADD (CONSTRAINT  R116 FOREIGN KEY (artefact_id_fwd) REFERENCES cbp_tkt_artefact(artefact_id));
ALTER TABLE cbp_tkt_artefact_notif_group
	ADD (CONSTRAINT  R265 FOREIGN KEY (artefact_type_id) REFERENCES cbp_tkt_artefact_type(artefact_type_id));
ALTER TABLE cbp_tkt_artefact_notif_group
	ADD (CONSTRAINT  R266 FOREIGN KEY (notif_group_id) REFERENCES cbp_tkt_notif_group(notif_group_id));
ALTER TABLE cbp_tkt_artefact_rel
	ADD (CONSTRAINT  R6 FOREIGN KEY (tkt_id,tkt_system_res_id) REFERENCES cbp_tkt(tkt_id,tkt_system_res_id));
ALTER TABLE cbp_tkt_artefact_rel
	ADD (CONSTRAINT  R7 FOREIGN KEY (artefact_id) REFERENCES cbp_tkt_artefact(artefact_id));
ALTER TABLE cbp_tkt_cmd_prop
	ADD (CONSTRAINT  R250 FOREIGN KEY (cmd_type_id) REFERENCES cbp_tkt_cmd_type(cmd_type_id));
ALTER TABLE cbp_tkt_cmd_prop
	ADD (CONSTRAINT  R252 FOREIGN KEY (form_prop_id) REFERENCES cbp_tkt_form_prop(form_prop_id));
ALTER TABLE cbp_tkt_code_tag
	ADD (CONSTRAINT  R153 FOREIGN KEY (sub_folder_res_id) REFERENCES cbp_tkt_res(res_id));
ALTER TABLE cbp_tkt_code_tag
	ADD (CONSTRAINT  R128 FOREIGN KEY (cbp_project_id) REFERENCES cbp_project(cbp_project_id));
ALTER TABLE cbp_tkt_code_tag
	ADD (CONSTRAINT  R133 FOREIGN KEY (object_type_id) REFERENCES cbp_tkt_res_type_object(object_type_id));
ALTER TABLE cbp_tkt_code_tag
	ADD (CONSTRAINT  R150 FOREIGN KEY (repo_res_id) REFERENCES cbp_tkt_res(res_id));
ALTER TABLE cbp_tkt_code_tag
	ADD (CONSTRAINT  R151 FOREIGN KEY (folder_res_id) REFERENCES cbp_tkt_res(res_id));
ALTER TABLE cbp_tkt_code_tag
	ADD (CONSTRAINT  R152 FOREIGN KEY (project_res_id) REFERENCES cbp_tkt_res(res_id));
ALTER TABLE cbp_tkt_code_tag_rel
	ADD (CONSTRAINT  R135 FOREIGN KEY (tkt_id,tkt_system_res_id) REFERENCES cbp_tkt(tkt_id,tkt_system_res_id));
ALTER TABLE cbp_tkt_code_tag_rel
	ADD (CONSTRAINT  R136 FOREIGN KEY (code_tag_id) REFERENCES cbp_tkt_code_tag(code_tag_id));
ALTER TABLE cbp_tkt_master_status
	ADD (CONSTRAINT  R233 FOREIGN KEY (msa_id) REFERENCES cbp_tkt_master_subject_area(msa_id));
ALTER TABLE cbp_tkt_misc_config
	ADD (CONSTRAINT  R223 FOREIGN KEY (misc_config_type_id) REFERENCES cbp_tkt_misc_config_type(misc_config_type_id));
ALTER TABLE cbp_tkt_node_prop_xform
	ADD (CONSTRAINT  R113 FOREIGN KEY (node_name,artefact_type_id,property_name) REFERENCES cbp_tkt_arte_node_prop(node_name,artefact_type_id,property_name));
ALTER TABLE cbp_tkt_node_prop_xform
	ADD (CONSTRAINT  R286 FOREIGN KEY (env_type_id) REFERENCES cbp_env_type(cbp_env_type_id));
ALTER TABLE cbp_tkt_notif_group_member
	ADD (CONSTRAINT  R202 FOREIGN KEY (notif_group_id) REFERENCES cbp_tkt_notif_group(notif_group_id));
ALTER TABLE cbp_tkt_notif_group_member
	ADD (CONSTRAINT  R203 FOREIGN KEY (cbp_user_id) REFERENCES cbp_user_security(cbp_user_id));
ALTER TABLE cbp_tkt_policy
	ADD (CONSTRAINT  R171 FOREIGN KEY (policy_category_type_id) REFERENCES cbp_tkt_policy_category(policy_category_type_id));
ALTER TABLE cbp_tkt_policy_target
	ADD (CONSTRAINT  R051 FOREIGN KEY (policy_id) REFERENCES cbp_tkt_policy(policy_id));
ALTER TABLE cbp_tkt_policy_target
	ADD (CONSTRAINT  R121 FOREIGN KEY (res_type_id) REFERENCES cbp_tkt_res_type(res_type_id));
ALTER TABLE cbp_tkt_policy_target
	ADD (CONSTRAINT  R122 FOREIGN KEY (artefact_type_id) REFERENCES cbp_tkt_artefact_type(artefact_type_id));
ALTER TABLE cbp_tkt_policy_target
	ADD (CONSTRAINT  R123 FOREIGN KEY (cbp_project_id) REFERENCES cbp_project(cbp_project_id));
ALTER TABLE cbp_tkt_policy_target
	ADD (CONSTRAINT  R124 FOREIGN KEY (env_type_id) REFERENCES cbp_env_type(cbp_env_type_id));
ALTER TABLE cbp_tkt_policy_target
	ADD (CONSTRAINT  R170 FOREIGN KEY (res_id) REFERENCES cbp_tkt_res(res_id));
ALTER TABLE cbp_tkt_promo_plan
	ADD (CONSTRAINT  R215 FOREIGN KEY (release_tag_id) REFERENCES cbp_tkt_release_tag(release_tag_id));
ALTER TABLE cbp_tkt_promo_plan
	ADD (CONSTRAINT  R274 FOREIGN KEY (notif_group_id) REFERENCES cbp_tkt_notif_group(notif_group_id));
ALTER TABLE cbp_tkt_promo_plan
	ADD (CONSTRAINT  R275 FOREIGN KEY (approver_id) REFERENCES cbp_user_security(cbp_user_id));
ALTER TABLE cbp_tkt_promo_plan
	ADD (CONSTRAINT  R276 FOREIGN KEY (requester_id) REFERENCES cbp_user_security(cbp_user_id));
ALTER TABLE cbp_tkt_promo_plan
	ADD (CONSTRAINT  R95 FOREIGN KEY (artefact_dep_status_type) REFERENCES cbp_tkt_artefact_dep_status(artefact_dep_status_type));
ALTER TABLE cbp_tkt_promo_plan
	ADD (CONSTRAINT  R97 FOREIGN KEY (tkt_id,artefact_id,tkt_system_res_id) REFERENCES cbp_tkt_artefact_rel(tkt_id,artefact_id,tkt_system_res_id));
ALTER TABLE cbp_tkt_promo_plan
	ADD (CONSTRAINT  R99 FOREIGN KEY (target_res_id) REFERENCES cbp_tkt_res(res_id));
ALTER TABLE cbp_tkt_promo_plan
	ADD (CONSTRAINT  R100 FOREIGN KEY (target_sub_res_id) REFERENCES cbp_tkt_res(res_id));
ALTER TABLE cbp_tkt_property
	ADD (CONSTRAINT  R281 FOREIGN KEY (property_group_id) REFERENCES cbp_tkt_property_group(property_group_id));
ALTER TABLE cbp_tkt_prx_object_type
	ADD (CONSTRAINT  R_200 FOREIGN KEY (code_type_id) REFERENCES cbp_tkt_code_type(code_type_id));
ALTER TABLE cbp_tkt_prx_object_type
	ADD (CONSTRAINT  R_201 FOREIGN KEY (asset_type_id) REFERENCES cbp_tkt_asset_type(asset_type_id));
ALTER TABLE cbp_tkt_rel_tag_env
	ADD (CONSTRAINT  R224 FOREIGN KEY (release_tag_id) REFERENCES cbp_tkt_release_tag(release_tag_id));
ALTER TABLE cbp_tkt_rel_tag_env
	ADD (CONSTRAINT  R225 FOREIGN KEY (source_env_type_id) REFERENCES cbp_env_type(cbp_env_type_id));
ALTER TABLE cbp_tkt_rel_tag_env
	ADD (CONSTRAINT  R226 FOREIGN KEY (target_env_type_id) REFERENCES cbp_env_type(cbp_env_type_id));
ALTER TABLE cbp_tkt_rel_tag_env
	ADD (CONSTRAINT  R245 FOREIGN KEY (sub_res_id) REFERENCES cbp_tkt_res(res_id));
ALTER TABLE cbp_tkt_rel_tag_type
	ADD (CONSTRAINT  R246 FOREIGN KEY (res_type_id) REFERENCES cbp_tkt_res_type(res_type_id));
ALTER TABLE cbp_tkt_release_tag
	ADD (CONSTRAINT  R212 FOREIGN KEY (created_by) REFERENCES cbp_user_security(cbp_user_id));
ALTER TABLE cbp_tkt_release_tag
	ADD (CONSTRAINT  R213 FOREIGN KEY (modified_by) REFERENCES cbp_user_security(cbp_user_id));
ALTER TABLE cbp_tkt_release_tag
	ADD (CONSTRAINT  R247 FOREIGN KEY (rel_tag_type_id) REFERENCES cbp_tkt_rel_tag_type(rel_tag_type_id));
ALTER TABLE cbp_tkt_res
	ADD (CONSTRAINT  R1 FOREIGN KEY (res_type_id) REFERENCES cbp_tkt_res_type(res_type_id));
ALTER TABLE cbp_tkt_res
	ADD (CONSTRAINT  R253 FOREIGN KEY (res_id_parent_gen_1) REFERENCES cbp_tkt_res(res_id));
ALTER TABLE cbp_tkt_res
	ADD (CONSTRAINT  R254 FOREIGN KEY (res_id_parent_gen_2) REFERENCES cbp_tkt_res(res_id));
ALTER TABLE cbp_tkt_res
	ADD (CONSTRAINT  R255 FOREIGN KEY (res_id_parent_gen_3) REFERENCES cbp_tkt_res(res_id));
ALTER TABLE cbp_tkt_res
	ADD (CONSTRAINT  R256 FOREIGN KEY (res_id_parent_gen_4) REFERENCES cbp_tkt_res(res_id));
ALTER TABLE cbp_tkt_res
	ADD (CONSTRAINT  R257 FOREIGN KEY (res_id_parent_gen_5) REFERENCES cbp_tkt_res(res_id));
ALTER TABLE cbp_tkt_res
	ADD (CONSTRAINT  R258 FOREIGN KEY (res_id_parent_gen_6) REFERENCES cbp_tkt_res(res_id));
ALTER TABLE cbp_tkt_res
	ADD (CONSTRAINT  R283 FOREIGN KEY (res_id_parent_gen_7) REFERENCES cbp_tkt_res(res_id));
ALTER TABLE cbp_tkt_res
	ADD (CONSTRAINT  R284 FOREIGN KEY (res_id_parent_gen_8) REFERENCES cbp_tkt_res(res_id));
ALTER TABLE cbp_tkt_res_cred
	ADD (CONSTRAINT  R178 FOREIGN KEY (res_id) REFERENCES cbp_tkt_res(res_id));
ALTER TABLE cbp_tkt_res_misc_config
	ADD (CONSTRAINT  R221 FOREIGN KEY (res_id) REFERENCES cbp_tkt_res(res_id));
ALTER TABLE cbp_tkt_res_misc_config
	ADD (CONSTRAINT  R222 FOREIGN KEY (misc_config_id) REFERENCES cbp_tkt_misc_config(misc_config_id));
ALTER TABLE cbp_tkt_res_type
	ADD (CONSTRAINT  R2200 FOREIGN KEY (cbp_code_type_id) REFERENCES cbp_code_type(cbp_code_type_id));
ALTER TABLE cbp_tkt_res_type_form
	ADD (CONSTRAINT  R101 FOREIGN KEY (res_type_id) REFERENCES cbp_tkt_res_type(res_type_id));
ALTER TABLE cbp_tkt_res_type_form
	ADD (CONSTRAINT  R102 FOREIGN KEY (form_prop_id) REFERENCES cbp_tkt_form_prop(form_prop_id));
ALTER TABLE cbp_tkt_res_type_object
	ADD (CONSTRAINT  R287 FOREIGN KEY (res_type_id) REFERENCES cbp_tkt_res_type(res_type_id));
ALTER TABLE cbp_tkt_res_type_supp_op
	ADD (CONSTRAINT  R37 FOREIGN KEY (op_type_id) REFERENCES cbp_tkt_op_type(op_type_id));
ALTER TABLE cbp_tkt_res_type_supp_op
	ADD (CONSTRAINT  R172 FOREIGN KEY (res_type_id) REFERENCES cbp_tkt_res_type(res_type_id));
ALTER TABLE cbp_tkt_role_sub_op_type
	ADD (CONSTRAINT  R38 FOREIGN KEY (role_id) REFERENCES cbp_tkt_role(role_id));
ALTER TABLE cbp_tkt_role_sub_op_type
	ADD (CONSTRAINT  R184 FOREIGN KEY (sub_op_type_id) REFERENCES cbp_tkt_sub_op_type(sub_op_type_id));
ALTER TABLE cbp_tkt_sched
	ADD (CONSTRAINT  R228 FOREIGN KEY (created_by_user) REFERENCES cbp_user_security(cbp_user_id));
ALTER TABLE cbp_tkt_sched
	ADD (CONSTRAINT  R234 FOREIGN KEY (master_status_id) REFERENCES cbp_tkt_master_status(master_status_id));
ALTER TABLE cbp_tkt_sched_job_param_rel
	ADD (CONSTRAINT  R230 FOREIGN KEY (schedule_id) REFERENCES cbp_tkt_sched(schedule_id));
ALTER TABLE cbp_tkt_sched_job_param_rel
	ADD (CONSTRAINT  R231 FOREIGN KEY (job_type_id) REFERENCES cbp_tkt_job_type(job_type_id));
ALTER TABLE cbp_tkt_sched_job_param_rel
	ADD (CONSTRAINT  R232 FOREIGN KEY (job_parameter_id) REFERENCES cbp_tkt_job_parameter(job_parameter_id));
ALTER TABLE cbp_tkt_sub_op_type
	ADD (CONSTRAINT  R174 FOREIGN KEY (op_type_id) REFERENCES cbp_tkt_op_type(op_type_id));
ALTER TABLE cbp_tkt_tag_used_obj_op_type
	ADD (CONSTRAINT  R175 FOREIGN KEY (sub_op_type_id) REFERENCES cbp_tkt_sub_op_type(sub_op_type_id));
ALTER TABLE cbp_tkt_tag_used_obj_op_type
	ADD (CONSTRAINT  R140 FOREIGN KEY (op_type_id) REFERENCES cbp_tkt_op_type(op_type_id));
ALTER TABLE cbp_tkt_tag_used_obj_op_type
	ADD (CONSTRAINT  R163 FOREIGN KEY (tkt_id,tkt_system_res_id) REFERENCES cbp_tkt(tkt_id,tkt_system_res_id));
ALTER TABLE cbp_tkt_tag_used_obj_op_type
	ADD (CONSTRAINT  R164 FOREIGN KEY (code_tag_id) REFERENCES cbp_tkt_code_tag(code_tag_id));
ALTER TABLE cbp_tkt_tag_used_obj_op_type
	ADD (CONSTRAINT  R165 FOREIGN KEY (res_id) REFERENCES cbp_tkt_res(res_id));
ALTER TABLE cbp_tkt_tag_used_obj_op_type
	ADD (CONSTRAINT  R166 FOREIGN KEY (object_type_id) REFERENCES cbp_tkt_res_type_object(object_type_id));
ALTER TABLE cbp_tkt_user_app_rel_priv
	ADD (CONSTRAINT  R208 FOREIGN KEY (cbp_user_id) REFERENCES cbp_user_security(cbp_user_id));
ALTER TABLE cbp_tkt_user_app_rel_priv
	ADD (CONSTRAINT  R209 FOREIGN KEY (cbp_project_id,release_tag_id) REFERENCES cbp_tkt_app_release_tag(cbp_project_id,release_tag_id));
ALTER TABLE cbp_tkt_user_app_rel_priv
	ADD (CONSTRAINT  R210 FOREIGN KEY (modified_by) REFERENCES cbp_user_security(cbp_user_id));
ALTER TABLE cbp_tkt_user_role
	ADD (CONSTRAINT  R262 FOREIGN KEY (cbp_user_id) REFERENCES cbp_user_security(cbp_user_id));
ALTER TABLE cbp_tkt_user_role
	ADD (CONSTRAINT  R263 FOREIGN KEY (role_id) REFERENCES cbp_tkt_role(role_id));
ALTER TABLE cbp_user_proj_rel_branch
	ADD ( FOREIGN KEY (res_id) REFERENCES cbp_tkt_res(res_id));	